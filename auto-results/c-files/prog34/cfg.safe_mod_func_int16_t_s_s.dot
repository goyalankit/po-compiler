digraph "CFG for 'safe_mod_func_int16_t_s_s' function" {
	label="CFG for 'safe_mod_func_int16_t_s_s' function";

	Node0xacf7a48 [shape=record,label="{entry:\l  %si1.addr = alloca i16, align 2\l  %si2.addr = alloca i16, align 2\l  store i16 %si1, i16* %si1.addr, align 2\l  store i16 %si2, i16* %si2.addr, align 2\l  %0 = load i16* %si2.addr, align 2\l  %conv = sext i16 %0 to i32\l  %cmp = icmp eq i32 %conv, 0\l  br i1 %cmp, label %cond.true, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0xacf7a48:s0 -> Node0xacf7ad8;
	Node0xacf7a48:s1 -> Node0xacf7a78;
	Node0xacf7a78 [shape=record,label="{lor.lhs.false:                                    \l  %1 = load i16* %si1.addr, align 2\l  %conv2 = sext i16 %1 to i32\l  %cmp3 = icmp eq i32 %conv2, -32768\l  br i1 %cmp3, label %land.lhs.true, label %cond.false\l|{<s0>T|<s1>F}}"];
	Node0xacf7a78:s0 -> Node0xacf7aa8;
	Node0xacf7a78:s1 -> Node0xacf7b08;
	Node0xacf7aa8 [shape=record,label="{land.lhs.true:                                    \l  %2 = load i16* %si2.addr, align 2\l  %conv5 = sext i16 %2 to i32\l  %cmp6 = icmp eq i32 %conv5, -1\l  br i1 %cmp6, label %cond.true, label %cond.false\l|{<s0>T|<s1>F}}"];
	Node0xacf7aa8:s0 -> Node0xacf7ad8;
	Node0xacf7aa8:s1 -> Node0xacf7b08;
	Node0xacf7ad8 [shape=record,label="{cond.true:                                        \l  %3 = load i16* %si1.addr, align 2\l  %conv8 = sext i16 %3 to i32\l  br label %cond.end\l}"];
	Node0xacf7ad8 -> Node0xacf7b38;
	Node0xacf7b08 [shape=record,label="{cond.false:                                       \l  %4 = load i16* %si1.addr, align 2\l  %conv9 = sext i16 %4 to i32\l  %5 = load i16* %si2.addr, align 2\l  %conv10 = sext i16 %5 to i32\l  %rem = srem i32 %conv9, %conv10\l  br label %cond.end\l}"];
	Node0xacf7b08 -> Node0xacf7b38;
	Node0xacf7b38 [shape=record,label="{cond.end:                                         \l  %cond = phi i32 [ %conv8, %cond.true ], [ %rem, %cond.false ]\l  %conv11 = trunc i32 %cond to i16\l  ret i16 %conv11\l}"];
}
