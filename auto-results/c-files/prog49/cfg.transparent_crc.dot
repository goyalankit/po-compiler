digraph "CFG for 'transparent_crc' function" {
	label="CFG for 'transparent_crc' function";

	Node0xb223b98 [shape=record,label="{entry:\l  %val.addr = alloca i64, align 8\l  %vname.addr = alloca i8*, align 8\l  %flag.addr = alloca i32, align 4\l  store i64 %val, i64* %val.addr, align 8\l  store i8* %vname, i8** %vname.addr, align 8\l  store i32 %flag, i32* %flag.addr, align 4\l  %0 = load i64* %val.addr, align 8\l  call void @crc32_8bytes(i64 %0)\l  %1 = load i32* %flag.addr, align 4\l  %tobool = icmp ne i32 %1, 0\l  br i1 %tobool, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0xb223b98:s0 -> Node0xb223bc8;
	Node0xb223b98:s1 -> Node0xb223bf8;
	Node0xb223bc8 [shape=record,label="{if.then:                                          \l  %2 = load i8** %vname.addr, align 8\l  %3 = load i32* @crc32_context, align 4\l  %conv = zext i32 %3 to i64\l  %xor = xor i64 %conv, 4294967295\l  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]*\l... @.str4, i32 0, i32 0), i8* %2, i64 %xor)\l  br label %if.end\l}"];
	Node0xb223bc8 -> Node0xb223bf8;
	Node0xb223bf8 [shape=record,label="{if.end:                                           \l  ret void\l}"];
}
