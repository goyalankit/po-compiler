digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0xb40a648 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %argc.addr = alloca i32, align 4\l  %argv.addr = alloca i8**, align 8\l  %print_hash_value = alloca i32, align 4\l  %coerce = alloca %union.U1, align 4\l  store i32 0, i32* %retval\l  store i32 %argc, i32* %argc.addr, align 4\l  store i8** %argv, i8*** %argv.addr, align 8\l  store i32 0, i32* %print_hash_value, align 4\l  %0 = load i32* %argc.addr, align 4\l  %cmp = icmp eq i32 %0, 2\l  br i1 %cmp, label %land.lhs.true, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0xb40a648:s0 -> Node0xb409400;
	Node0xb40a648:s1 -> Node0xb409460;
	Node0xb409400 [shape=record,label="{land.lhs.true:                                    \l  %1 = load i8*** %argv.addr, align 8\l  %arrayidx = getelementptr inbounds i8** %1, i64 1\l  %2 = load i8** %arrayidx, align 8\l  %call = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8]*\l... @.str, i32 0, i32 0)) #4\l  %cmp1 = icmp eq i32 %call, 0\l  br i1 %cmp1, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0xb409400:s0 -> Node0xb409430;
	Node0xb409400:s1 -> Node0xb409460;
	Node0xb409430 [shape=record,label="{if.then:                                          \l  store i32 1, i32* %print_hash_value, align 4\l  br label %if.end\l}"];
	Node0xb409430 -> Node0xb409460;
	Node0xb409460 [shape=record,label="{if.end:                                           \l  call void @platform_main_begin()\l  call void @crc32_gentab()\l  %call2 = call i32 @func_1()\l  %coerce.dive = getelementptr %union.U1* %coerce, i32 0, i32 0\l  store i32 %call2, i32* %coerce.dive\l  %3 = load i32* @g_4, align 4\l  %conv = sext i32 %3 to i64\l  %4 = load i32* %print_hash_value, align 4\l  call void @transparent_crc(i64 %conv, i8* getelementptr inbounds ([4 x i8]*\l... @.str1, i32 0, i32 0), i32 %4)\l  %5 = load volatile i32* getelementptr inbounds (%union.U1* @g_5, i32 0, i32\l... 0), align 4\l  %conv3 = zext i32 %5 to i64\l  %6 = load i32* %print_hash_value, align 4\l  call void @transparent_crc(i64 %conv3, i8* getelementptr inbounds ([7 x i8]*\l... @.str2, i32 0, i32 0), i32 %6)\l  %7 = load i32* getelementptr inbounds (%union.U1* @g_5, i32 0, i32 0), align\l... 4\l  %conv4 = zext i32 %7 to i64\l  %8 = load i32* %print_hash_value, align 4\l  call void @transparent_crc(i64 %conv4, i8* getelementptr inbounds ([7 x i8]*\l... @.str3, i32 0, i32 0), i32 %8)\l  %9 = load volatile i32* getelementptr inbounds (%union.U1* @g_5, i32 0, i32\l... 0), align 4\l  %conv5 = sext i32 %9 to i64\l  %10 = load i32* %print_hash_value, align 4\l  call void @transparent_crc(i64 %conv5, i8* getelementptr inbounds ([7 x i8]*\l... @.str4, i32 0, i32 0), i32 %10)\l  %11 = load i32* @crc32_context, align 4\l  %conv6 = zext i32 %11 to i64\l  %xor = xor i64 %conv6, 4294967295\l  %conv7 = trunc i64 %xor to i32\l  %12 = load i32* %print_hash_value, align 4\l  call void @platform_main_end(i32 %conv7, i32 %12)\l  ret i32 0\l}"];
}
