digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x9dfad90 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %argc.addr = alloca i32, align 4\l  %argv.addr = alloca i8**, align 8\l  %N = alloca i32, align 4\l  %depth = alloca i32, align 4\l  %minDepth = alloca i32, align 4\l  %maxDepth = alloca i32, align 4\l  %stretchDepth = alloca i32, align 4\l  %stretchTree = alloca %struct.tn*, align 8\l  %longLivedTree = alloca %struct.tn*, align 8\l  %tempTree = alloca %struct.tn*, align 8\l  %i = alloca i64, align 8\l  %iterations = alloca i64, align 8\l  %check = alloca i64, align 8\l  store i32 0, i32* %retval\l  store i32 %argc, i32* %argc.addr, align 4\l  store i8** %argv, i8*** %argv.addr, align 8\l  %0 = load i8*** %argv.addr, align 8\l  %arrayidx = getelementptr inbounds i8** %0, i64 1\l  %1 = load i8** %arrayidx, align 8\l  %call = call i64 @atol(i8* %1) #4\l  %conv = trunc i64 %call to i32\l  store i32 %conv, i32* %N, align 4\l  store i32 4, i32* %minDepth, align 4\l  %2 = load i32* %minDepth, align 4\l  %add = add i32 %2, 2\l  %3 = load i32* %N, align 4\l  %cmp = icmp ugt i32 %add, %3\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x9dfad90:s0 -> Node0x9dfadc0;
	Node0x9dfad90:s1 -> Node0x9dfadf0;
	Node0x9dfadc0 [shape=record,label="{if.then:                                          \l  %4 = load i32* %minDepth, align 4\l  %add2 = add i32 %4, 2\l  store i32 %add2, i32* %maxDepth, align 4\l  br label %if.end\l}"];
	Node0x9dfadc0 -> Node0x9dfae20;
	Node0x9dfadf0 [shape=record,label="{if.else:                                          \l  %5 = load i32* %N, align 4\l  store i32 %5, i32* %maxDepth, align 4\l  br label %if.end\l}"];
	Node0x9dfadf0 -> Node0x9dfae20;
	Node0x9dfae20 [shape=record,label="{if.end:                                           \l  %6 = load i32* %maxDepth, align 4\l  %add3 = add i32 %6, 1\l  store i32 %add3, i32* %stretchDepth, align 4\l  %7 = load i32* %stretchDepth, align 4\l  %call4 = call %struct.tn* @BottomUpTree(i64 0, i32 %7)\l  store %struct.tn* %call4, %struct.tn** %stretchTree, align 8\l  %8 = load i32* %stretchDepth, align 4\l  %9 = load %struct.tn** %stretchTree, align 8\l  %call5 = call i64 @ItemCheck(%struct.tn* %9)\l  %call6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([1 x i8]*\l... @.str, i32 0, i32 0), i32 %8, i64 %call5)\l  %10 = load %struct.tn** %stretchTree, align 8\l  call void @DeleteTree(%struct.tn* %10)\l  %11 = load i32* %maxDepth, align 4\l  %call7 = call %struct.tn* @BottomUpTree(i64 0, i32 %11)\l  store %struct.tn* %call7, %struct.tn** %longLivedTree, align 8\l  %12 = load i32* %minDepth, align 4\l  store i32 %12, i32* %depth, align 4\l  br label %for.cond\l}"];
	Node0x9dfae20 -> Node0x9dfae50;
	Node0x9dfae50 [shape=record,label="{for.cond:                                         \l  %13 = load i32* %depth, align 4\l  %14 = load i32* %maxDepth, align 4\l  %cmp8 = icmp ule i32 %13, %14\l  br i1 %cmp8, label %for.body, label %for.end28\l|{<s0>T|<s1>F}}"];
	Node0x9dfae50:s0 -> Node0x9dfae80;
	Node0x9dfae50:s1 -> Node0x9dfafa0;
	Node0x9dfae80 [shape=record,label="{for.body:                                         \l  %15 = load i32* %maxDepth, align 4\l  %16 = load i32* %depth, align 4\l  %sub = sub i32 %15, %16\l  %17 = load i32* %minDepth, align 4\l  %add10 = add i32 %sub, %17\l  %conv11 = uitofp i32 %add10 to double\l  %call12 = call double @pow(double 2.000000e+00, double %conv11) #5\l  %conv13 = fptosi double %call12 to i64\l  store i64 %conv13, i64* %iterations, align 8\l  store i64 0, i64* %check, align 8\l  store i64 1, i64* %i, align 8\l  br label %for.cond14\l}"];
	Node0x9dfae80 -> Node0x9dfaeb0;
	Node0x9dfaeb0 [shape=record,label="{for.cond14:                                       \l  %18 = load i64* %i, align 8\l  %19 = load i64* %iterations, align 8\l  %cmp15 = icmp sle i64 %18, %19\l  br i1 %cmp15, label %for.body17, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x9dfaeb0:s0 -> Node0x9dfaee0;
	Node0x9dfaeb0:s1 -> Node0x9dfaf40;
	Node0x9dfaee0 [shape=record,label="{for.body17:                                       \l  %20 = load i64* %i, align 8\l  %21 = load i32* %depth, align 4\l  %call18 = call %struct.tn* @BottomUpTree(i64 %20, i32 %21)\l  store %struct.tn* %call18, %struct.tn** %tempTree, align 8\l  %22 = load %struct.tn** %tempTree, align 8\l  %call19 = call i64 @ItemCheck(%struct.tn* %22)\l  %23 = load i64* %check, align 8\l  %add20 = add nsw i64 %23, %call19\l  store i64 %add20, i64* %check, align 8\l  %24 = load %struct.tn** %tempTree, align 8\l  call void @DeleteTree(%struct.tn* %24)\l  %25 = load i64* %i, align 8\l  %sub21 = sub nsw i64 0, %25\l  %26 = load i32* %depth, align 4\l  %call22 = call %struct.tn* @BottomUpTree(i64 %sub21, i32 %26)\l  store %struct.tn* %call22, %struct.tn** %tempTree, align 8\l  %27 = load %struct.tn** %tempTree, align 8\l  %call23 = call i64 @ItemCheck(%struct.tn* %27)\l  %28 = load i64* %check, align 8\l  %add24 = add nsw i64 %28, %call23\l  store i64 %add24, i64* %check, align 8\l  %29 = load %struct.tn** %tempTree, align 8\l  call void @DeleteTree(%struct.tn* %29)\l  br label %for.inc\l}"];
	Node0x9dfaee0 -> Node0x9dfaf10;
	Node0x9dfaf10 [shape=record,label="{for.inc:                                          \l  %30 = load i64* %i, align 8\l  %inc = add nsw i64 %30, 1\l  store i64 %inc, i64* %i, align 8\l  br label %for.cond14\l}"];
	Node0x9dfaf10 -> Node0x9dfaeb0;
	Node0x9dfaf40 [shape=record,label="{for.end:                                          \l  %31 = load i64* %iterations, align 8\l  %mul = mul nsw i64 %31, 2\l  %32 = load i32* %depth, align 4\l  %33 = load i64* %check, align 8\l  %call25 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([1 x i8]*\l... @.str, i32 0, i32 0), i64 %mul, i32 %32, i64 %33)\l  br label %for.inc26\l}"];
	Node0x9dfaf40 -> Node0x9dfaf70;
	Node0x9dfaf70 [shape=record,label="{for.inc26:                                        \l  %34 = load i32* %depth, align 4\l  %add27 = add i32 %34, 2\l  store i32 %add27, i32* %depth, align 4\l  br label %for.cond\l}"];
	Node0x9dfaf70 -> Node0x9dfae50;
	Node0x9dfafa0 [shape=record,label="{for.end28:                                        \l  %35 = load i32* %maxDepth, align 4\l  %36 = load %struct.tn** %longLivedTree, align 8\l  %call29 = call i64 @ItemCheck(%struct.tn* %36)\l  %call30 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([1 x i8]*\l... @.str, i32 0, i32 0), i32 %35, i64 %call29)\l  ret i32 0\l}"];
}
