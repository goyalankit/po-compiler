digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0xae763b0 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %argc.addr = alloca i32, align 4\l  %argv.addr = alloca i8**, align 8\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %print_hash_value = alloca i32, align 4\l  store i32 0, i32* %retval\l  store i32 %argc, i32* %argc.addr, align 4\l  store i8** %argv, i8*** %argv.addr, align 8\l  store i32 0, i32* %print_hash_value, align 4\l  %0 = load i32* %argc.addr, align 4\l  %cmp = icmp eq i32 %0, 2\l  br i1 %cmp, label %land.lhs.true, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0xae763b0:s0 -> Node0xae763e0;
	Node0xae763b0:s1 -> Node0xae76440;
	Node0xae763e0 [shape=record,label="{land.lhs.true:                                    \l  %1 = load i8*** %argv.addr, align 8\l  %arrayidx = getelementptr inbounds i8** %1, i64 1\l  %2 = load i8** %arrayidx, align 8\l  %call = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8]*\l... @.str, i32 0, i32 0)) #3\l  %cmp1 = icmp eq i32 %call, 0\l  br i1 %cmp1, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0xae763e0:s0 -> Node0xae76410;
	Node0xae763e0:s1 -> Node0xae76440;
	Node0xae76410 [shape=record,label="{if.then:                                          \l  store i32 1, i32* %print_hash_value, align 4\l  br label %if.end\l}"];
	Node0xae76410 -> Node0xae76440;
	Node0xae76440 [shape=record,label="{if.end:                                           \l  call void @platform_main_begin()\l  call void @crc32_gentab()\l  %call2 = call i32 @func_1()\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0xae76440 -> Node0xae76470;
	Node0xae76470 [shape=record,label="{for.cond:                                         \l  %3 = load i32* %i, align 4\l  %cmp3 = icmp slt i32 %3, 10\l  br i1 %cmp3, label %for.body, label %for.end15\l|{<s0>T|<s1>F}}"];
	Node0xae76470:s0 -> Node0xae764a0;
	Node0xae76470:s1 -> Node0xae77230;
	Node0xae764a0 [shape=record,label="{for.body:                                         \l  store i32 0, i32* %j, align 4\l  br label %for.cond4\l}"];
	Node0xae764a0 -> Node0xae764d0;
	Node0xae764d0 [shape=record,label="{for.cond4:                                        \l  %4 = load i32* %j, align 4\l  %cmp5 = icmp slt i32 %4, 7\l  br i1 %cmp5, label %for.body6, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0xae764d0:s0 -> Node0xae77110;
	Node0xae764d0:s1 -> Node0xae771d0;
	Node0xae77110 [shape=record,label="{for.body6:                                        \l  %5 = load i32* %j, align 4\l  %idxprom = sext i32 %5 to i64\l  %6 = load i32* %i, align 4\l  %idxprom7 = sext i32 %6 to i64\l  %arrayidx8 = getelementptr inbounds [10 x [7 x i16]]* @g_2, i32 0, i64\l... %idxprom7\l  %arrayidx9 = getelementptr inbounds [7 x i16]* %arrayidx8, i32 0, i64\l... %idxprom\l  %7 = load i16* %arrayidx9, align 2\l  %conv = zext i16 %7 to i64\l  %8 = load i32* %print_hash_value, align 4\l  call void @transparent_crc(i64 %conv, i8* getelementptr inbounds ([10 x i8]*\l... @.str1, i32 0, i32 0), i32 %8)\l  %9 = load i32* %print_hash_value, align 4\l  %tobool = icmp ne i32 %9, 0\l  br i1 %tobool, label %if.then10, label %if.end12\l|{<s0>T|<s1>F}}"];
	Node0xae77110:s0 -> Node0xae77140;
	Node0xae77110:s1 -> Node0xae77170;
	Node0xae77140 [shape=record,label="{if.then10:                                        \l  %10 = load i32* %i, align 4\l  %11 = load i32* %j, align 4\l  %call11 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x\l... i8]* @.str2, i32 0, i32 0), i32 %10, i32 %11)\l  br label %if.end12\l}"];
	Node0xae77140 -> Node0xae77170;
	Node0xae77170 [shape=record,label="{if.end12:                                         \l  br label %for.inc\l}"];
	Node0xae77170 -> Node0xae771a0;
	Node0xae771a0 [shape=record,label="{for.inc:                                          \l  %12 = load i32* %j, align 4\l  %inc = add nsw i32 %12, 1\l  store i32 %inc, i32* %j, align 4\l  br label %for.cond4\l}"];
	Node0xae771a0 -> Node0xae764d0;
	Node0xae771d0 [shape=record,label="{for.end:                                          \l  br label %for.inc13\l}"];
	Node0xae771d0 -> Node0xae77200;
	Node0xae77200 [shape=record,label="{for.inc13:                                        \l  %13 = load i32* %i, align 4\l  %inc14 = add nsw i32 %13, 1\l  store i32 %inc14, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0xae77200 -> Node0xae76470;
	Node0xae77230 [shape=record,label="{for.end15:                                        \l  %14 = load i32* @crc32_context, align 4\l  %conv16 = zext i32 %14 to i64\l  %xor = xor i64 %conv16, 4294967295\l  %conv17 = trunc i64 %xor to i32\l  %15 = load i32* %print_hash_value, align 4\l  call void @platform_main_end(i32 %conv17, i32 %15)\l  ret i32 0\l}"];
}
