digraph "CFG for 'func_26' function" {
	label="CFG for 'func_26' function";

	Node0xa7dd3f0 [shape=record,label="{entry:\l  %p_27.addr = alloca i8, align 1\l  %l_33 = alloca i64, align 8\l  %l_37 = alloca i32*, align 8\l  %l_68 = alloca [6 x [2 x i16*]], align 16\l  %l_3469 = alloca i64, align 8\l  %l_3484 = alloca [7 x %struct.S0*], align 16\l  %l_3487 = alloca [2 x i16], align 2\l  %l_3488 = alloca i32*, align 8\l  %l_3489 = alloca [5 x i32*], align 16\l  %l_3490 = alloca i8, align 1\l  %l_3491 = alloca [6 x i8], align 1\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %l_36 = alloca i32*, align 8\l  %l_45 = alloca %struct.S2, align 4\l  %l_46 = alloca i16*, align 8\l  %l_1501 = alloca [7 x i16*], align 16\l  %l_1502 = alloca i32, align 4\l  %l_1503 = alloca i64, align 8\l  %i17 = alloca i32, align 4\l  %agg.tmp = alloca %struct.S2, align 4\l  %coerce = alloca %struct.S0, align 4\l  %tmp = alloca \{ i64, i32 \}\l  %l_3467 = alloca i32*, align 8\l  %l_3468 = alloca [9 x i32*], align 16\l  %l_3472 = alloca i8*, align 8\l  %l_3473 = alloca i8*, align 8\l  %l_3481 = alloca i32*, align 8\l  %l_3480 = alloca i32**, align 8\l  %l_3479 = alloca i32***, align 8\l  %l_3478 = alloca [3 x i32****], align 16\l  %l_3483 = alloca i32***, align 8\l  %l_3485 = alloca %struct.S0*, align 8\l  %i75 = alloca i32, align 4\l  store i8 %p_27, i8* %p_27.addr, align 1\l  store i64 5739606075931340148, i64* %l_33, align 8\l  store i32* @g_3, i32** %l_37, align 8\l  store i64 -1, i64* %l_3469, align 8\l  %0 = bitcast [7 x %struct.S0*]* %l_3484 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([7 x %struct.S0*]*\l... @func_26.l_3484 to i8*), i64 56, i32 16, i1 false)\l  store i32* @g_2855, i32** %l_3488, align 8\l  %1 = bitcast [5 x i32*]* %l_3489 to i8*\l  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 40, i32 16, i1 false)\l  %2 = bitcast i8* %1 to [5 x i32*]*\l  %3 = getelementptr [5 x i32*]* %2, i32 0, i32 0\l  store i32* bitcast (i8* getelementptr (i8* bitcast ([4 x [1 x i32]]* @g_215\l... to i8*), i64 12) to i32*), i32** %3\l  %4 = getelementptr [5 x i32*]* %2, i32 0, i32 1\l  store i32* bitcast (i8* getelementptr (i8* bitcast ([4 x [1 x i32]]* @g_215\l... to i8*), i64 12) to i32*), i32** %4\l  %5 = getelementptr [5 x i32*]* %2, i32 0, i32 2\l  store i32* bitcast (i8* getelementptr (i8* bitcast ([4 x [1 x i32]]* @g_215\l... to i8*), i64 12) to i32*), i32** %5\l  %6 = getelementptr [5 x i32*]* %2, i32 0, i32 3\l  store i32* bitcast (i8* getelementptr (i8* bitcast ([4 x [1 x i32]]* @g_215\l... to i8*), i64 12) to i32*), i32** %6\l  %7 = getelementptr [5 x i32*]* %2, i32 0, i32 4\l  store i32* bitcast (i8* getelementptr (i8* bitcast ([4 x [1 x i32]]* @g_215\l... to i8*), i64 12) to i32*), i32** %7\l  store i8 5, i8* %l_3490, align 1\l  %8 = bitcast [6 x i8]* %l_3491 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* getelementptr inbounds ([6\l... x i8]* @func_26.l_3491, i32 0, i32 0), i64 6, i32 1, i1 false)\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0xa7dd3f0 -> Node0xa7dd420;
	Node0xa7dd420 [shape=record,label="{for.cond:                                         \l  %9 = load i32* %i, align 4\l  %cmp = icmp slt i32 %9, 6\l  br i1 %cmp, label %for.body, label %for.end8\l|{<s0>T|<s1>F}}"];
	Node0xa7dd420:s0 -> Node0xa7dd450;
	Node0xa7dd420:s1 -> Node0xa7fe588;
	Node0xa7dd450 [shape=record,label="{for.body:                                         \l  store i32 0, i32* %j, align 4\l  br label %for.cond1\l}"];
	Node0xa7dd450 -> Node0xa7fe498;
	Node0xa7fe498 [shape=record,label="{for.cond1:                                        \l  %10 = load i32* %j, align 4\l  %cmp2 = icmp slt i32 %10, 2\l  br i1 %cmp2, label %for.body3, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0xa7fe498:s0 -> Node0xa7fe4c8;
	Node0xa7fe498:s1 -> Node0xa7fe528;
	Node0xa7fe4c8 [shape=record,label="{for.body3:                                        \l  %11 = load i32* %j, align 4\l  %idxprom = sext i32 %11 to i64\l  %12 = load i32* %i, align 4\l  %idxprom4 = sext i32 %12 to i64\l  %arrayidx = getelementptr inbounds [6 x [2 x i16*]]* %l_68, i32 0, i64\l... %idxprom4\l  %arrayidx5 = getelementptr inbounds [2 x i16*]* %arrayidx, i32 0, i64\l... %idxprom\l  store i16* @g_69, i16** %arrayidx5, align 8\l  br label %for.inc\l}"];
	Node0xa7fe4c8 -> Node0xa7fe4f8;
	Node0xa7fe4f8 [shape=record,label="{for.inc:                                          \l  %13 = load i32* %j, align 4\l  %inc = add nsw i32 %13, 1\l  store i32 %inc, i32* %j, align 4\l  br label %for.cond1\l}"];
	Node0xa7fe4f8 -> Node0xa7fe498;
	Node0xa7fe528 [shape=record,label="{for.end:                                          \l  br label %for.inc6\l}"];
	Node0xa7fe528 -> Node0xa7fe558;
	Node0xa7fe558 [shape=record,label="{for.inc6:                                         \l  %14 = load i32* %i, align 4\l  %inc7 = add nsw i32 %14, 1\l  store i32 %inc7, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0xa7fe558 -> Node0xa7dd420;
	Node0xa7fe588 [shape=record,label="{for.end8:                                         \l  store i32 0, i32* %i, align 4\l  br label %for.cond9\l}"];
	Node0xa7fe588 -> Node0xa7fe5b8;
	Node0xa7fe5b8 [shape=record,label="{for.cond9:                                        \l  %15 = load i32* %i, align 4\l  %cmp10 = icmp slt i32 %15, 2\l  br i1 %cmp10, label %for.body11, label %for.end16\l|{<s0>T|<s1>F}}"];
	Node0xa7fe5b8:s0 -> Node0xa7fe5e8;
	Node0xa7fe5b8:s1 -> Node0xa7fe648;
	Node0xa7fe5e8 [shape=record,label="{for.body11:                                       \l  %16 = load i32* %i, align 4\l  %idxprom12 = sext i32 %16 to i64\l  %arrayidx13 = getelementptr inbounds [2 x i16]* %l_3487, i32 0, i64\l... %idxprom12\l  store i16 7421, i16* %arrayidx13, align 2\l  br label %for.inc14\l}"];
	Node0xa7fe5e8 -> Node0xa7fe618;
	Node0xa7fe618 [shape=record,label="{for.inc14:                                        \l  %17 = load i32* %i, align 4\l  %inc15 = add nsw i32 %17, 1\l  store i32 %inc15, i32* %i, align 4\l  br label %for.cond9\l}"];
	Node0xa7fe618 -> Node0xa7fe5b8;
	Node0xa7fe648 [shape=record,label="{for.end16:                                        \l  %call = call i64 @safe_unary_minus_func_uint64_t_u(i64 0)\l  %tobool = icmp ne i64 %call, 0\l  br i1 %tobool, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0xa7fe648:s0 -> Node0xa7fe678;
	Node0xa7fe648:s1 -> Node0xa7fe708;
	Node0xa7fe678 [shape=record,label="{if.then:                                          \l  store i32* @g_3, i32** %l_36, align 8\l  %18 = bitcast %struct.S2* %l_45 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* bitcast (%struct.S2*\l... @func_26.l_45 to i8*), i64 4, i32 4, i1 false)\l  store i16* @g_47, i16** %l_46, align 8\l  %19 = bitcast [7 x i16*]* %l_1501 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* bitcast ([7 x i16*]*\l... @func_26.l_1501 to i8*), i64 56, i32 16, i1 false)\l  store i32 676398359, i32* %l_1502, align 4\l  store i64 0, i64* %l_1503, align 8\l  %20 = load i64* %l_33, align 8\l  %conv = trunc i64 %20 to i8\l  %21 = load i32** %l_36, align 8\l  %22 = load i32** %l_37, align 8\l  %cmp18 = icmp ne i32* %21, %22\l  %conv19 = zext i1 %cmp18 to i32\l  %23 = load i32** %l_36, align 8\l  %24 = load i32* %23, align 4\l  %cmp20 = icmp sgt i32 %conv19, %24\l  %conv21 = zext i1 %cmp20 to i32\l  %25 = load i16** %l_46, align 8\l  %26 = load i16* %25, align 2\l  %conv22 = sext i16 %26 to i64\l  %and = and i64 %conv22, 7986\l  %conv23 = trunc i64 %and to i16\l  store i16 %conv23, i16* %25, align 2\l  %conv24 = sext i16 %conv23 to i64\l  %cmp25 = icmp eq i64 %conv24, 46834\l  %conv26 = zext i1 %cmp25 to i32\l  %27 = load volatile i16** @g_66, align 8\l  %arrayidx27 = getelementptr inbounds [6 x [2 x i16*]]* %l_68, i32 0, i64 1\l  %arrayidx28 = getelementptr inbounds [2 x i16*]* %arrayidx27, i32 0, i64 0\l  %28 = load i16** %arrayidx28, align 8\l  %cmp29 = icmp ne i16* %27, %28\l  %conv30 = zext i1 %cmp29 to i32\l  %conv31 = trunc i32 %conv30 to i16\l  %29 = load i8* %p_27.addr, align 1\l  %conv32 = zext i8 %29 to i64\l  %30 = load i32** %l_37, align 8\l  %31 = load i32* %30, align 4\l  %conv33 = sext i32 %31 to i64\l  %32 = load i32** %l_36, align 8\l  %33 = load i16** %l_46, align 8\l  %call34 = call \{ i64, i32 \} @func_60(i16 signext %conv31, i64 %conv32, i64\l... %conv33, i32* %32, i16* %33)\l  store \{ i64, i32 \} %call34, \{ i64, i32 \}* %tmp\l  %34 = bitcast \{ i64, i32 \}* %tmp to i8*\l  %35 = bitcast %struct.S0* %coerce to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %34, i64 12, i32 1, i1\l... false)\l  %36 = load i8* %p_27.addr, align 1\l  %conv35 = zext i8 %36 to i16\l  %call36 = call signext i16 @safe_mul_func_int16_t_s_s(i16 signext %conv35,\l... i16 signext 0)\l  %conv37 = sext i16 %call36 to i32\l  store i32 %conv37, i32* %l_1502, align 4\l  %conv38 = sext i32 %conv37 to i64\l  %37 = load i64* %l_1503, align 8\l  %and39 = and i64 %conv38, %37\l  %cmp40 = icmp eq i64 %and39, -9\l  %conv41 = zext i1 %cmp40 to i32\l  %38 = load i8* %p_27.addr, align 1\l  %conv42 = zext i8 %38 to i64\l  %bf.load = load i16* bitcast ([2 x i8]* getelementptr inbounds (%struct.S1*\l... bitcast (\{ i32, i32, i8, i8, [2 x i8] \}* @g_243 to %struct.S1*), i32 0, i32\l... 2) to i16*), align 4\l  %bf.shl = shl i16 %bf.load, 3\l  %bf.ashr = ashr i16 %bf.shl, 3\l  %bf.cast = sext i16 %bf.ashr to i32\l  %conv43 = trunc i32 %bf.cast to i8\l  %arrayidx44 = getelementptr inbounds [7 x i16*]* %l_1501, i32 0, i64 2\l  %39 = load i16** %arrayidx44, align 8\l  %call45 = call i32 @func_53(i32 %conv41, i64 %conv42, i8 signext %conv43,\l... i16* %39)\l  %coerce.dive = getelementptr %struct.S2* %agg.tmp, i32 0, i32 0\l  store i32 %call45, i32* %coerce.dive\l  %40 = load i32** %l_36, align 8\l  %41 = load i32* %40, align 4\l  %conv46 = trunc i32 %41 to i16\l  %arrayidx47 = getelementptr inbounds [7 x i16*]* %l_1501, i32 0, i64 5\l  %42 = load i16** %arrayidx47, align 8\l  %43 = load i32** %l_37, align 8\l  %coerce.dive48 = getelementptr %struct.S2* %agg.tmp, i32 0, i32 0\l  %44 = load i32* %coerce.dive48\l  %call49 = call i32 @func_48(i32 %44, i16 signext %conv46, i16* %42, i32* %43)\l  %xor = xor i32 %conv26, %call49\l  %tobool50 = icmp ne i32 %xor, 0\l  br i1 %tobool50, label %land.rhs, label %land.end\l|{<s0>T|<s1>F}}"];
	Node0xa7fe678:s0 -> Node0xa7fe6a8;
	Node0xa7fe678:s1 -> Node0xa7fe6d8;
	Node0xa7fe6a8 [shape=record,label="{land.rhs:                                         \l  %45 = load i8* %p_27.addr, align 1\l  %conv51 = zext i8 %45 to i32\l  %tobool52 = icmp ne i32 %conv51, 0\l  br label %land.end\l}"];
	Node0xa7fe6a8 -> Node0xa7fe6d8;
	Node0xa7fe6d8 [shape=record,label="{land.end:                                         \l  %46 = phi i1 [ false, %if.then ], [ %tobool52, %land.rhs ]\l  %land.ext = zext i1 %46 to i32\l  %47 = load i8* %p_27.addr, align 1\l  %conv53 = zext i8 %47 to i32\l  %48 = load i32** %l_36, align 8\l  %coerce.dive54 = getelementptr %struct.S2* %l_45, i32 0, i32 0\l  %49 = load i32* %coerce.dive54\l  %call55 = call zeroext i8 @func_40(i32 %49, i32 %land.ext, i32 %conv53, i32*\l... %48)\l  %call56 = call zeroext i8 @safe_lshift_func_uint8_t_u_s(i8 zeroext %call55,\l... i32 2)\l  %cmp57 = icmp eq i32* @g_3, %l_1502\l  %conv58 = zext i1 %cmp57 to i32\l  %xor59 = xor i32 %conv21, %conv58\l  %conv60 = sext i32 %xor59 to i64\l  %50 = load i32** %l_37, align 8\l  %51 = load i32* %50, align 4\l  %conv61 = sext i32 %51 to i64\l  %call62 = call i64 @safe_sub_func_uint64_t_u_u(i64 %conv60, i64 %conv61)\l  %52 = load i32** %l_37, align 8\l  %call63 = call i32* @func_30(i8 signext %conv, i32* %52)\l  %53 = load volatile i32*** @g_3466, align 8\l  store i32* %call63, i32** %53, align 8\l  br label %if.end\l}"];
	Node0xa7fe6d8 -> Node0xa7fe8b8;
	Node0xa7fe708 [shape=record,label="{if.else:                                          \l  store i32* null, i32** %l_3467, align 8\l  %54 = bitcast [9 x i32*]* %l_3468 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* bitcast ([9 x i32*]*\l... @func_26.l_3468 to i8*), i64 72, i32 16, i1 false)\l  store i8* null, i8** %l_3472, align 8\l  store i8* @g_113, i8** %l_3473, align 8\l  store i32* @g_3482, i32** %l_3481, align 8\l  store i32** %l_3481, i32*** %l_3480, align 8\l  store i32*** %l_3480, i32**** %l_3479, align 8\l  store i32*** %l_3480, i32**** %l_3483, align 8\l  store %struct.S0* bitcast (\{ i32, i8, i8, i8, i32 \}* @g_3486 to\l... %struct.S0*), %struct.S0** %l_3485, align 8\l  store i32 0, i32* %i75, align 4\l  br label %for.cond76\l}"];
	Node0xa7fe708 -> Node0xa7fe738;
	Node0xa7fe738 [shape=record,label="{for.cond76:                                       \l  %55 = load i32* %i75, align 4\l  %cmp77 = icmp slt i32 %55, 3\l  br i1 %cmp77, label %for.body79, label %for.end84\l|{<s0>T|<s1>F}}"];
	Node0xa7fe738:s0 -> Node0xa7fe768;
	Node0xa7fe738:s1 -> Node0xa7fe7c8;
	Node0xa7fe768 [shape=record,label="{for.body79:                                       \l  %56 = load i32* %i75, align 4\l  %idxprom80 = sext i32 %56 to i64\l  %arrayidx81 = getelementptr inbounds [3 x i32****]* %l_3478, i32 0, i64\l... %idxprom80\l  store i32**** %l_3479, i32***** %arrayidx81, align 8\l  br label %for.inc82\l}"];
	Node0xa7fe768 -> Node0xa7fe798;
	Node0xa7fe798 [shape=record,label="{for.inc82:                                        \l  %57 = load i32* %i75, align 4\l  %inc83 = add nsw i32 %57, 1\l  store i32 %inc83, i32* %i75, align 4\l  br label %for.cond76\l}"];
	Node0xa7fe798 -> Node0xa7fe738;
	Node0xa7fe7c8 [shape=record,label="{for.end84:                                        \l  %58 = load i64* %l_3469, align 8\l  %dec = add i64 %58, -1\l  store i64 %dec, i64* %l_3469, align 8\l  %59 = load i8* %p_27.addr, align 1\l  %60 = load i8** %l_3473, align 8\l  store i8 %59, i8* %60, align 1\l  %conv85 = zext i8 %59 to i64\l  %61 = load i8* %p_27.addr, align 1\l  %conv86 = zext i8 %61 to i64\l  %62 = load i8* %p_27.addr, align 1\l  %tobool87 = icmp ne i8 %62, 0\l  %lnot = xor i1 %tobool87, true\l  %lnot.ext = zext i1 %lnot to i32\l  %63 = load i64* getelementptr inbounds (%union.U4* @g_1497, i32 0, i32 0),\l... align 8\l  %tobool88 = icmp ne i64 %63, 0\l  br i1 %tobool88, label %lor.end, label %lor.rhs\l|{<s0>T|<s1>F}}"];
	Node0xa7fe7c8:s0 -> Node0xa7fe828;
	Node0xa7fe7c8:s1 -> Node0xa7fe7f8;
	Node0xa7fe7f8 [shape=record,label="{lor.rhs:                                          \l  %64 = load i8* %p_27.addr, align 1\l  %conv89 = zext i8 %64 to i32\l  %65 = load i8* %p_27.addr, align 1\l  %conv90 = zext i8 %65 to i32\l  %cmp91 = icmp eq i32 %conv89, %conv90\l  br label %lor.end\l}"];
	Node0xa7fe7f8 -> Node0xa7fe828;
	Node0xa7fe828 [shape=record,label="{lor.end:                                          \l  %66 = phi i1 [ true, %for.end84 ], [ %cmp91, %lor.rhs ]\l  %lor.ext = zext i1 %66 to i32\l  %cmp93 = icmp sge i32 %lnot.ext, %lor.ext\l  %conv94 = zext i1 %cmp93 to i32\l  %67 = load i32****** @g_2628, align 8\l  %68 = load i32***** %67, align 8\l  %69 = load i32**** %68, align 8\l  %70 = load i8* %p_27.addr, align 1\l  %conv95 = zext i8 %70 to i64\l  %and96 = and i64 2291386818, %conv95\l  %conv97 = trunc i64 %and96 to i8\l  %call98 = call signext i8 @safe_lshift_func_int8_t_s_s(i8 signext %conv97,\l... i32 3)\l  store i32*** null, i32**** %l_3483, align 8\l  %cmp99 = icmp eq i32*** %69, null\l  %conv100 = zext i1 %cmp99 to i32\l  %conv101 = trunc i32 %conv100 to i8\l  %call102 = call zeroext i8 @safe_rshift_func_uint8_t_u_s(i8 zeroext\l... %conv101, i32 3)\l  %conv103 = zext i8 %call102 to i64\l  %cmp104 = icmp slt i64 %conv103, 153110138\l  %conv105 = zext i1 %cmp104 to i32\l  %cmp106 = icmp eq i32 %conv94, %conv105\l  br i1 %cmp106, label %land.rhs108, label %land.end111\l|{<s0>T|<s1>F}}"];
	Node0xa7fe828:s0 -> Node0xa7fe858;
	Node0xa7fe828:s1 -> Node0xa7fe888;
	Node0xa7fe858 [shape=record,label="{land.rhs108:                                      \l  %71 = load i8* %p_27.addr, align 1\l  %conv109 = zext i8 %71 to i32\l  %tobool110 = icmp ne i32 %conv109, 0\l  br label %land.end111\l}"];
	Node0xa7fe858 -> Node0xa7fe888;
	Node0xa7fe888 [shape=record,label="{land.end111:                                      \l  %72 = phi i1 [ false, %lor.end ], [ %tobool110, %land.rhs108 ]\l  %land.ext112 = zext i1 %72 to i32\l  %and113 = and i64 %conv86, 113\l  %cmp114 = icmp sgt i64 %conv85, %and113\l  %conv115 = zext i1 %cmp114 to i32\l  %73 = load i32** @g_1133, align 8\l  %74 = load i32* %73, align 4\l  %xor116 = xor i32 %74, %conv115\l  store i32 %xor116, i32* %73, align 4\l  %75 = load i8* %p_27.addr, align 1\l  %conv117 = zext i8 %75 to i32\l  %76 = load i32** %l_37, align 8\l  %77 = load i32* %76, align 4\l  %or = or i32 %77, %conv117\l  store i32 %or, i32* %76, align 4\l  %arrayidx118 = getelementptr inbounds [7 x %struct.S0*]* %l_3484, i32 0, i64\l... 2\l  %78 = load %struct.S0** %arrayidx118, align 8\l  store %struct.S0* %78, %struct.S0** %l_3485, align 8\l  br label %if.end\l}"];
	Node0xa7fe888 -> Node0xa7fe8b8;
	Node0xa7fe8b8 [shape=record,label="{if.end:                                           \l  %arrayidx119 = getelementptr inbounds [6 x i8]* %l_3491, i32 0, i64 2\l  %79 = load i8* %arrayidx119, align 1\l  %dec120 = add i8 %79, -1\l  store i8 %dec120, i8* %arrayidx119, align 1\l  %80 = load i32** %l_3488, align 8\l  ret i32* %80\l}"];
}
