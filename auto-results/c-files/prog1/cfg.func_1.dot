digraph "CFG for 'func_1' function" {
	label="CFG for 'func_1' function";

	Node0xa356c40 [shape=record,label="{entry:\l  %l_6 = alloca i32, align 4\l  %l_27 = alloca i64, align 8\l  %l_28 = alloca i32*, align 8\l  %l_40 = alloca i8*, align 8\l  %l_758 = alloca i8*, align 8\l  %l_2768 = alloca i32, align 4\l  %l_2769 = alloca [10 x [10 x %union.U0]], align 16\l  %l_2793 = alloca i16, align 2\l  %l_2923 = alloca %union.U4*, align 8\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %agg.tmp.ensured = alloca %union.U2, align 8\l  %coerce = alloca %union.U5, align 8\l  %coerce17 = alloca %union.U3, align 2\l  store i32 1, i32* %l_6, align 4\l  store i64 -6272971320058267714, i64* %l_27, align 8\l  store i32* @g_29, i32** %l_28, align 8\l  store i8* @g_41, i8** %l_40, align 8\l  store i8* getelementptr inbounds (\{ i8, [7 x i8] \}* @g_655, i32 0, i32 0),\l... i8** %l_758, align 8\l  store i32 2, i32* %l_2768, align 4\l  %0 = bitcast [10 x [10 x %union.U0]]* %l_2769 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([10 x [10 x\l... %union.U0]]* @func_1.l_2769 to i8*), i64 200, i32 16, i1 false)\l  store i16 -3307, i16* %l_2793, align 2\l  store %union.U4* null, %union.U4** %l_2923, align 8\l  %1 = load i32* @g_21, align 4\l  %2 = load i32* @g_21, align 4\l  %conv = sext i32 %2 to i64\l  %3 = load i64* %l_27, align 8\l  %4 = load i32** %l_28, align 8\l  %5 = load i32* %4, align 4\l  %dec = add i32 %5, -1\l  store i32 %dec, i32* %4, align 4\l  %conv1 = zext i32 %5 to i64\l  %xor = xor i64 %3, %conv1\l  %conv2 = trunc i64 %xor to i32\l  %6 = load i32* @g_21, align 4\l  %conv3 = trunc i32 %6 to i8\l  %7 = bitcast %union.U2* %agg.tmp.ensured to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* getelementptr inbounds (\{\l... i8, [7 x i8] \}* @g_39, i32 0, i32 0), i64 8, i32 8, i1 true)\l  %8 = load i8** %l_40, align 8\l  store i8 1, i8* %8, align 1\l  %9 = load i32* @g_21, align 4\l  %conv4 = trunc i32 %9 to i8\l  %10 = load i32* @g_21, align 4\l  %call = call i8* @func_42(i8 signext %conv4, i32 %10)\l  %coerce.dive = getelementptr %union.U5* %coerce, i32 0, i32 0\l  store i8* %call, i8** %coerce.dive\l  %11 = load i8** %l_40, align 8\l  %12 = load i8** %l_40, align 8\l  %cmp = icmp eq i8* %11, %12\l  %conv5 = zext i1 %cmp to i32\l  %conv6 = sext i32 %conv5 to i64\l  %or = or i64 -7061944916344335271, %conv6\l  %conv7 = trunc i64 %or to i8\l  %13 = load i8** %l_758, align 8\l  store i8 %conv7, i8* %13, align 1\l  %call8 = call zeroext i8 @safe_mul_func_uint8_t_u_u(i8 zeroext 1, i8 zeroext\l... %conv7)\l  %conv9 = zext i8 %call8 to i32\l  %tobool = icmp ne i32 %conv9, 0\l  br i1 %tobool, label %lor.end, label %lor.rhs\l|{<s0>T|<s1>F}}"];
	Node0xa356c40:s0 -> Node0xa356ca0;
	Node0xa356c40:s1 -> Node0xa356c70;
	Node0xa356c70 [shape=record,label="{lor.rhs:                                          \l  %14 = load i8* getelementptr inbounds (\{ i8, [7 x i8] \}* @g_654, i32 0, i32\l... 0), align 1\l  %conv10 = sext i8 %14 to i32\l  %tobool11 = icmp ne i32 %conv10, 0\l  br label %lor.end\l}"];
	Node0xa356c70 -> Node0xa356ca0;
	Node0xa356ca0 [shape=record,label="{lor.end:                                          \l  %15 = phi i1 [ true, %entry ], [ %tobool11, %lor.rhs ]\l  %lor.ext = zext i1 %15 to i32\l  %16 = load i8* getelementptr inbounds (\{ i8, [7 x i8] \}* @g_644, i32 0, i32\l... 0), align 1\l  %conv12 = zext i8 %16 to i32\l  %cmp13 = icmp sgt i32 %lor.ext, %conv12\l  %conv14 = zext i1 %cmp13 to i32\l  %conv15 = trunc i32 %conv14 to i8\l  %17 = load i8** @g_759, align 8\l  %18 = load i32*** @g_380, align 8\l  %19 = load i32** %18, align 8\l  %call16 = call i16 @func_32(i8 signext %conv15, i8* %17, i32 1, i32* %19)\l  %coerce.dive18 = getelementptr %union.U3* %coerce17, i32 0, i32 0\l  store i16 %call16, i16* %coerce.dive18\l  %20 = load i8* getelementptr inbounds (\{ i8, [7 x i8] \}* @g_317, i32 0, i32\l... 0), align 1\l  %conv19 = zext i8 %20 to i32\l  %call20 = call i8* @func_22(i32 %conv2, i8 signext %conv3, %union.U4* null,\l... i32 %conv19)\l  %call21 = call i64 @func_17(i32 %1, i64 %conv, i8* %call20)\l  %21 = load i32* %l_2768, align 4\l  %conv22 = zext i32 %21 to i64\l  %cmp23 = icmp eq i64 %call21, %conv22\l  %conv24 = zext i1 %cmp23 to i32\l  %arrayidx = getelementptr inbounds [10 x [10 x %union.U0]]* %l_2769, i32 0,\l... i64 2\l  %arrayidx25 = getelementptr inbounds [10 x %union.U0]* %arrayidx, i32 0, i64\l... 2\l  %22 = load i8** %l_40, align 8\l  %23 = load %union.U4** @g_2770, align 8\l  %coerce.dive26 = getelementptr %union.U0* %arrayidx25, i32 0, i32 0\l  %24 = load i16* %coerce.dive26\l  %call27 = call %union.U4* @func_12(%union.U4* null, i16 %24, i8* %22,\l... %union.U4* %23)\l  %25 = load i16* %l_2793, align 2\l  %conv28 = zext i16 %25 to i32\l  %26 = load i32* %l_2768, align 4\l  %conv29 = zext i32 %26 to i64\l  %27 = load %union.U4** @g_2770, align 8\l  %call30 = call zeroext i8 @func_7(%union.U4* %call27, i32 %conv28, i64\l... %conv29, %union.U4* %27)\l  %conv31 = zext i8 %call30 to i32\l  %or32 = or i32 1, %conv31\l  %28 = load i64* %l_27, align 8\l  %conv33 = trunc i64 %28 to i32\l  %call34 = call %union.U4* @func_2(i32 %or32, i8* @g_908, i32 %conv33)\l  store %union.U4* %call34, %union.U4** %l_2923, align 8\l  %29 = load volatile i8* bitcast (%union.U7* @g_2295 to i8*), align 1\l  %conv35 = sext i8 %29 to i32\l  ret i32 %conv35\l}"];
}
