digraph "CFG for 'func_55' function" {
	label="CFG for 'func_55' function";

	Node0xab1d858 [shape=record,label="{entry:\l  %p_56.addr = alloca i32, align 4\l  %p_57.addr = alloca i32*, align 8\l  %p_58.addr = alloca i32, align 4\l  %p_59 = alloca %union.U0, align 1\l  %p_60.addr = alloca i32*, align 8\l  %l_66 = alloca i64*, align 8\l  %l_67 = alloca [7 x i64*], align 16\l  %l_69 = alloca i32, align 4\l  %l_78 = alloca i32, align 4\l  %l_81 = alloca i32*, align 8\l  %l_88 = alloca [6 x i64], align 16\l  %l_89 = alloca i8*, align 8\l  %l_91 = alloca i16*, align 8\l  %l_93 = alloca i32*, align 8\l  %l_94 = alloca i32**, align 8\l  %i = alloca i32, align 4\l  store i32 %p_56, i32* %p_56.addr, align 4\l  store i32* %p_57, i32** %p_57.addr, align 8\l  store i32 %p_58, i32* %p_58.addr, align 4\l  %coerce.dive = getelementptr %union.U0* %p_59, i32 0, i32 0\l  store i8 %p_59.coerce, i8* %coerce.dive\l  store i32* %p_60, i32** %p_60.addr, align 8\l  store i64* null, i64** %l_66, align 8\l  %0 = bitcast [7 x i64*]* %l_67 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([7 x i64*]*\l... @func_55.l_67 to i8*), i64 56, i32 16, i1 false)\l  store i32 -2, i32* %l_69, align 4\l  store i32 -10, i32* %l_78, align 4\l  store i32* @g_82, i32** %l_81, align 8\l  %1 = bitcast [6 x i64]* %l_88 to i8*\l  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 48, i32 16, i1 false)\l  %2 = bitcast i8* %1 to [6 x i64]*\l  %3 = getelementptr [6 x i64]* %2, i32 0, i32 0\l  store i64 3821014705110366175, i64* %3\l  %4 = getelementptr [6 x i64]* %2, i32 0, i32 1\l  store i64 -7819625704113028271, i64* %4\l  %5 = getelementptr [6 x i64]* %2, i32 0, i32 2\l  store i64 3821014705110366175, i64* %5\l  %6 = getelementptr [6 x i64]* %2, i32 0, i32 3\l  store i64 3821014705110366175, i64* %6\l  %7 = getelementptr [6 x i64]* %2, i32 0, i32 4\l  store i64 -7819625704113028271, i64* %7\l  %8 = getelementptr [6 x i64]* %2, i32 0, i32 5\l  store i64 3821014705110366175, i64* %8\l  store i8* @g_90, i8** %l_89, align 8\l  store i16* @g_92, i16** %l_91, align 8\l  store i32* @g_10, i32** %l_93, align 8\l  store i32** %l_93, i32*** %l_94, align 8\l  %9 = load i64* getelementptr inbounds ([5 x i64]* @g_68, i32 0, i64 1),\l... align 8\l  %dec = add i64 %9, -1\l  store i64 %dec, i64* getelementptr inbounds ([5 x i64]* @g_68, i32 0, i64\l... 1), align 8\l  %10 = load i32* %l_69, align 4\l  %conv = sext i32 %10 to i64\l  %cmp = icmp sge i64 %conv, -6\l  %conv1 = zext i1 %cmp to i32\l  %11 = load volatile i32* @g_2, align 4\l  %conv2 = sext i32 %11 to i64\l  %cmp3 = icmp eq i64 1194401468, %conv2\l  %conv4 = zext i1 %cmp3 to i32\l  store i32 %conv4, i32* %l_78, align 4\l  %conv5 = trunc i32 %conv4 to i16\l  %12 = load i32* getelementptr inbounds ([4 x [3 x [7 x i32]]]* @g_8, i32 0,\l... i64 1, i64 1, i64 0), align 4\l  %13 = load i32** %l_81, align 8\l  %14 = load i32* %13, align 4\l  %xor = xor i32 %14, %12\l  store i32 %xor, i32* %13, align 4\l  store i32 %xor, i32* getelementptr inbounds ([1 x i32]* @g_83, i32 0, i64\l... 0), align 4\l  %15 = load i32* getelementptr inbounds ([5 x i32]* @g_12, i32 0, i64 3),\l... align 4\l  %tobool = icmp ne i32 %15, 0\l  br i1 %tobool, label %land.rhs, label %land.end\l|{<s0>T|<s1>F}}"];
	Node0xab1d858:s0 -> Node0xab1d888;
	Node0xab1d858:s1 -> Node0xab1d8b8;
	Node0xab1d888 [shape=record,label="{land.rhs:                                         \l  br label %land.end\l}"];
	Node0xab1d888 -> Node0xab1d8b8;
	Node0xab1d8b8 [shape=record,label="{land.end:                                         \l  %16 = phi i1 [ false, %entry ], [ true, %land.rhs ]\l  %land.ext = zext i1 %16 to i32\l  %conv6 = trunc i32 %land.ext to i8\l  %17 = load i32* @g_13, align 4\l  %call = call signext i8 @safe_lshift_func_int8_t_s_u(i8 signext %conv6, i32\l... %17)\l  %18 = load i32* getelementptr inbounds ([4 x [3 x [7 x i32]]]* @g_8, i32 0,\l... i64 1, i64 1, i64 0), align 4\l  %conv7 = trunc i32 %18 to i8\l  %call8 = call signext i8 @safe_div_func_int8_t_s_s(i8 signext %call, i8\l... signext %conv7)\l  %f0 = bitcast %union.U0* %p_59 to i8*\l  %19 = load i8* %f0, align 1\l  %conv9 = zext i8 %19 to i64\l  %arrayidx = getelementptr inbounds [6 x i64]* %l_88, i32 0, i64 3\l  %20 = load i64* %arrayidx, align 8\l  %and = and i64 %conv9, %20\l  %cmp10 = icmp ult i64 %and, -2011731738421749209\l  %conv11 = zext i1 %cmp10 to i32\l  %21 = load i32** %p_57.addr, align 8\l  %22 = load i32* %21, align 4\l  %call12 = call i32 @safe_sub_func_int32_t_s_s(i32 %xor, i32 %22)\l  %23 = load i32* %p_58.addr, align 4\l  %cmp13 = icmp uge i32 %call12, %23\l  %conv14 = zext i1 %cmp13 to i32\l  %conv15 = trunc i32 %conv14 to i8\l  %24 = load i8** %l_89, align 8\l  store i8 %conv15, i8* %24, align 1\l  %f016 = bitcast %union.U0* %p_59 to i8*\l  %25 = load i8* %f016, align 1\l  %conv17 = zext i8 %25 to i16\l  %26 = load i16** %l_91, align 8\l  store i16 %conv17, i16* %26, align 2\l  %conv18 = sext i16 %conv17 to i32\l  %call19 = call zeroext i16 @safe_rshift_func_uint16_t_u_s(i16 zeroext\l... %conv5, i32 %conv18)\l  %conv20 = zext i16 %call19 to i32\l  %27 = load i32* getelementptr inbounds ([4 x [3 x [7 x i32]]]* @g_8, i32 0,\l... i64 0, i64 0, i64 1), align 4\l  %call21 = call i32 @safe_add_func_int32_t_s_s(i32 %conv20, i32 %27)\l  %call22 = call i32 @safe_div_func_uint32_t_u_u(i32 %conv1, i32 %call21)\l  %conv23 = zext i32 %call22 to i64\l  %cmp24 = icmp ule i64 %dec, %conv23\l  %conv25 = zext i1 %cmp24 to i32\l  %conv26 = trunc i32 %conv25 to i8\l  %28 = load i32* %p_58.addr, align 4\l  %call27 = call signext i8 @safe_lshift_func_int8_t_s_s(i8 signext %conv26,\l... i32 %28)\l  %conv28 = sext i8 %call27 to i32\l  %29 = load i32* @g_10, align 4\l  %xor29 = xor i32 %conv28, %29\l  %conv30 = sext i32 %xor29 to i64\l  %30 = load i32* %p_58.addr, align 4\l  %conv31 = zext i32 %30 to i64\l  %call32 = call i64 @safe_sub_func_uint64_t_u_u(i64 %conv30, i64 %conv31)\l  %tobool33 = icmp ne i64 %call32, 0\l  br i1 %tobool33, label %lor.end, label %lor.rhs\l|{<s0>T|<s1>F}}"];
	Node0xab1d8b8:s0 -> Node0xab3fbc8;
	Node0xab1d8b8:s1 -> Node0xab3fb98;
	Node0xab3fb98 [shape=record,label="{lor.rhs:                                          \l  br label %lor.end\l}"];
	Node0xab3fb98 -> Node0xab3fbc8;
	Node0xab3fbc8 [shape=record,label="{lor.end:                                          \l  %31 = phi i1 [ true, %land.end ], [ true, %lor.rhs ]\l  %lor.ext = zext i1 %31 to i32\l  %32 = load i32** %l_93, align 8\l  %33 = load i32*** %l_94, align 8\l  store i32* %32, i32** %33, align 8\l  %34 = load i32* %p_56.addr, align 4\l  %conv34 = sext i32 %34 to i64\l  ret i64 %conv34\l}"];
}
