digraph "CFG for 'func_34' function" {
	label="CFG for 'func_34' function";

	Node0xb9eff18 [shape=record,label="{entry:\l  %p_35.addr = alloca i16*, align 8\l  %p_36.addr = alloca i64, align 8\l  %l_52 = alloca i32*, align 8\l  %l_54 = alloca i32*, align 8\l  %l_55 = alloca i32*, align 8\l  %l_56 = alloca i32*, align 8\l  %l_57 = alloca i32*, align 8\l  %l_58 = alloca [10 x i32], align 16\l  %l_59 = alloca i32*, align 8\l  %l_60 = alloca [10 x [3 x i32*]], align 16\l  %l_80 = alloca [6 x i16**], align 16\l  %l_81 = alloca [4 x i16*], align 16\l  %l_83 = alloca i16*, align 8\l  %l_82 = alloca i16**, align 8\l  %l_125 = alloca i64*, align 8\l  %l_126 = alloca i32, align 4\l  %l_127 = alloca i8*, align 8\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %i62 = alloca i32, align 4\l  %l_128 = alloca i32**, align 8\l  store i16* %p_35, i16** %p_35.addr, align 8\l  store i64 %p_36, i64* %p_36.addr, align 8\l  store i32* @g_53, i32** %l_52, align 8\l  store i32* @g_53, i32** %l_54, align 8\l  store i32* @g_53, i32** %l_55, align 8\l  store i32* @g_53, i32** %l_56, align 8\l  store i32* @g_53, i32** %l_57, align 8\l  %0 = bitcast [10 x i32]* %l_58 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([10 x i32]*\l... @func_34.l_58 to i8*), i64 40, i32 16, i1 false)\l  %arrayidx = getelementptr inbounds [10 x i32]* %l_58, i32 0, i64 3\l  store i32* %arrayidx, i32** %l_59, align 8\l  %arrayinit.begin = getelementptr inbounds [10 x [3 x i32*]]* %l_60, i64 0,\l... i64 0\l  %arrayinit.begin1 = getelementptr inbounds [3 x i32*]* %arrayinit.begin, i64\l... 0, i64 0\l  store i32* @g_10, i32** %arrayinit.begin1\l  %arrayinit.element = getelementptr inbounds i32** %arrayinit.begin1, i64 1\l  store i32* @g_10, i32** %arrayinit.element\l  %arrayinit.element2 = getelementptr inbounds i32** %arrayinit.element, i64 1\l  store i32* null, i32** %arrayinit.element2\l  %arrayinit.element3 = getelementptr inbounds [3 x i32*]* %arrayinit.begin,\l... i64 1\l  %arrayinit.begin4 = getelementptr inbounds [3 x i32*]* %arrayinit.element3,\l... i64 0, i64 0\l  store i32* @g_53, i32** %arrayinit.begin4\l  %arrayinit.element5 = getelementptr inbounds i32** %arrayinit.begin4, i64 1\l  store i32* @g_53, i32** %arrayinit.element5\l  %arrayinit.element6 = getelementptr inbounds i32** %arrayinit.element5, i64 1\l  store i32* null, i32** %arrayinit.element6\l  %arrayinit.element7 = getelementptr inbounds [3 x i32*]*\l... %arrayinit.element3, i64 1\l  %arrayinit.begin8 = getelementptr inbounds [3 x i32*]* %arrayinit.element7,\l... i64 0, i64 0\l  store i32* @g_10, i32** %arrayinit.begin8\l  %arrayinit.element9 = getelementptr inbounds i32** %arrayinit.begin8, i64 1\l  store i32* @g_10, i32** %arrayinit.element9\l  %arrayinit.element10 = getelementptr inbounds i32** %arrayinit.element9, i64\l... 1\l  store i32* getelementptr inbounds ([4 x i32]* @g_16, i32 0, i64 1), i32**\l... %arrayinit.element10\l  %arrayinit.element11 = getelementptr inbounds [3 x i32*]*\l... %arrayinit.element7, i64 1\l  %arrayinit.begin12 = getelementptr inbounds [3 x i32*]*\l... %arrayinit.element11, i64 0, i64 0\l  %arrayidx13 = getelementptr inbounds [10 x i32]* %l_58, i32 0, i64 6\l  store i32* %arrayidx13, i32** %arrayinit.begin12\l  %arrayinit.element14 = getelementptr inbounds i32** %arrayinit.begin12, i64 1\l  store i32* @g_53, i32** %arrayinit.element14\l  %arrayinit.element15 = getelementptr inbounds i32** %arrayinit.element14,\l... i64 1\l  %arrayidx16 = getelementptr inbounds [10 x i32]* %l_58, i32 0, i64 6\l  store i32* %arrayidx16, i32** %arrayinit.element15\l  %arrayinit.element17 = getelementptr inbounds [3 x i32*]*\l... %arrayinit.element11, i64 1\l  %arrayinit.begin18 = getelementptr inbounds [3 x i32*]*\l... %arrayinit.element17, i64 0, i64 0\l  %arrayidx19 = getelementptr inbounds [10 x i32]* %l_58, i32 0, i64 6\l  store i32* %arrayidx19, i32** %arrayinit.begin18\l  %arrayinit.element20 = getelementptr inbounds i32** %arrayinit.begin18, i64 1\l  store i32* @g_10, i32** %arrayinit.element20\l  %arrayinit.element21 = getelementptr inbounds i32** %arrayinit.element20,\l... i64 1\l  store i32* @g_53, i32** %arrayinit.element21\l  %arrayinit.element22 = getelementptr inbounds [3 x i32*]*\l... %arrayinit.element17, i64 1\l  %arrayinit.begin23 = getelementptr inbounds [3 x i32*]*\l... %arrayinit.element22, i64 0, i64 0\l  store i32* @g_10, i32** %arrayinit.begin23\l  %arrayinit.element24 = getelementptr inbounds i32** %arrayinit.begin23, i64 1\l  %arrayidx25 = getelementptr inbounds [10 x i32]* %l_58, i32 0, i64 6\l  store i32* %arrayidx25, i32** %arrayinit.element24\l  %arrayinit.element26 = getelementptr inbounds i32** %arrayinit.element24,\l... i64 1\l  %arrayidx27 = getelementptr inbounds [10 x i32]* %l_58, i32 0, i64 6\l  store i32* %arrayidx27, i32** %arrayinit.element26\l  %arrayinit.element28 = getelementptr inbounds [3 x i32*]*\l... %arrayinit.element22, i64 1\l  %arrayinit.begin29 = getelementptr inbounds [3 x i32*]*\l... %arrayinit.element28, i64 0, i64 0\l  store i32* @g_53, i32** %arrayinit.begin29\l  %arrayinit.element30 = getelementptr inbounds i32** %arrayinit.begin29, i64 1\l  %arrayidx31 = getelementptr inbounds [10 x i32]* %l_58, i32 0, i64 6\l  store i32* %arrayidx31, i32** %arrayinit.element30\l  %arrayinit.element32 = getelementptr inbounds i32** %arrayinit.element30,\l... i64 1\l  store i32* getelementptr inbounds ([4 x i32]* @g_16, i32 0, i64 1), i32**\l... %arrayinit.element32\l  %arrayinit.element33 = getelementptr inbounds [3 x i32*]*\l... %arrayinit.element28, i64 1\l  %arrayinit.begin34 = getelementptr inbounds [3 x i32*]*\l... %arrayinit.element33, i64 0, i64 0\l  store i32* @g_10, i32** %arrayinit.begin34\l  %arrayinit.element35 = getelementptr inbounds i32** %arrayinit.begin34, i64 1\l  store i32* @g_10, i32** %arrayinit.element35\l  %arrayinit.element36 = getelementptr inbounds i32** %arrayinit.element35,\l... i64 1\l  store i32* null, i32** %arrayinit.element36\l  %arrayinit.element37 = getelementptr inbounds [3 x i32*]*\l... %arrayinit.element33, i64 1\l  %arrayinit.begin38 = getelementptr inbounds [3 x i32*]*\l... %arrayinit.element37, i64 0, i64 0\l  store i32* @g_53, i32** %arrayinit.begin38\l  %arrayinit.element39 = getelementptr inbounds i32** %arrayinit.begin38, i64 1\l  store i32* @g_53, i32** %arrayinit.element39\l  %arrayinit.element40 = getelementptr inbounds i32** %arrayinit.element39,\l... i64 1\l  store i32* null, i32** %arrayinit.element40\l  %arrayinit.element41 = getelementptr inbounds [3 x i32*]*\l... %arrayinit.element37, i64 1\l  %arrayinit.begin42 = getelementptr inbounds [3 x i32*]*\l... %arrayinit.element41, i64 0, i64 0\l  store i32* @g_10, i32** %arrayinit.begin42\l  %arrayinit.element43 = getelementptr inbounds i32** %arrayinit.begin42, i64 1\l  store i32* @g_10, i32** %arrayinit.element43\l  %arrayinit.element44 = getelementptr inbounds i32** %arrayinit.element43,\l... i64 1\l  store i32* getelementptr inbounds ([4 x i32]* @g_16, i32 0, i64 1), i32**\l... %arrayinit.element44\l  %1 = bitcast [6 x i16**]* %l_80 to i8*\l  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 48, i32 16, i1 false)\l  store i16* @g_48, i16** %l_83, align 8\l  store i16** %l_83, i16*** %l_82, align 8\l  store i64* getelementptr inbounds ([1 x [1 x [7 x i64]]]* @g_116, i32 0, i64\l... 0, i64 0, i64 4), i64** %l_125, align 8\l  store i32 -2, i32* %l_126, align 4\l  store i8* @g_27, i8** %l_127, align 8\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0xb9eff18 -> Node0xb9eff48;
	Node0xb9eff48 [shape=record,label="{for.cond:                                         \l  %2 = load i32* %i, align 4\l  %cmp = icmp slt i32 %2, 4\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0xb9eff48:s0 -> Node0xb9eff78;
	Node0xb9eff48:s1 -> Node0xb9effd8;
	Node0xb9eff78 [shape=record,label="{for.body:                                         \l  %3 = load i32* %i, align 4\l  %idxprom = sext i32 %3 to i64\l  %arrayidx45 = getelementptr inbounds [4 x i16*]* %l_81, i32 0, i64 %idxprom\l  store i16* @g_63, i16** %arrayidx45, align 8\l  br label %for.inc\l}"];
	Node0xb9eff78 -> Node0xb9effa8;
	Node0xb9effa8 [shape=record,label="{for.inc:                                          \l  %4 = load i32* %i, align 4\l  %inc = add nsw i32 %4, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0xb9effa8 -> Node0xb9eff48;
	Node0xb9effd8 [shape=record,label="{for.end:                                          \l  %5 = load i16* @g_63, align 2\l  %inc46 = add i16 %5, 1\l  store i16 %inc46, i16* @g_63, align 2\l  %6 = load i32* getelementptr inbounds ([4 x i32]* @g_16, i32 0, i64 0),\l... align 4\l  %7 = load i16** %p_35.addr, align 8\l  %8 = load i64* %p_36.addr, align 8\l  %conv = trunc i64 %8 to i32\l  %call = call i16* @func_73(i16* %7, i32 %conv)\l  %arrayidx47 = getelementptr inbounds [4 x i16*]* %l_81, i32 0, i64 1\l  store i16* %call, i16** %arrayidx47, align 8\l  %9 = load i16*** %l_82, align 8\l  %10 = load i32* getelementptr inbounds ([4 x i32]* @g_16, i32 0, i64 1),\l... align 4\l  %call48 = call i64 @func_68(i16* %call, i16* @g_48, i16** %9, i32 %10)\l  %11 = load i64** %l_125, align 8\l  store i64 %call48, i64* %11, align 8\l  %12 = load i32* @g_10, align 4\l  %tobool = icmp ne i32 %12, 0\l  br i1 %tobool, label %lor.end, label %lor.rhs\l|{<s0>T|<s1>F}}"];
	Node0xb9effd8:s0 -> Node0xb9f0038;
	Node0xb9effd8:s1 -> Node0xb9f0008;
	Node0xb9f0008 [shape=record,label="{lor.rhs:                                          \l  %13 = load i32** %l_55, align 8\l  %14 = load i32* %13, align 4\l  %tobool49 = icmp ne i32 %14, 0\l  br label %lor.end\l}"];
	Node0xb9f0008 -> Node0xb9f0038;
	Node0xb9f0038 [shape=record,label="{lor.end:                                          \l  %15 = phi i1 [ true, %for.end ], [ %tobool49, %lor.rhs ]\l  %lor.ext = zext i1 %15 to i32\l  %conv50 = trunc i32 %lor.ext to i16\l  %16 = load i64* %p_36.addr, align 8\l  %conv51 = trunc i64 %16 to i16\l  %call52 = call signext i16 @safe_sub_func_int16_t_s_s(i16 signext %conv50,\l... i16 signext %conv51)\l  %conv53 = sext i16 %call52 to i32\l  store i32 %conv53, i32* %l_126, align 4\l  %17 = load i32** %l_52, align 8\l  store i32 %conv53, i32* %17, align 4\l  %conv54 = sext i32 %conv53 to i64\l  %18 = load i16** %p_35.addr, align 8\l  %19 = load i8** %l_127, align 8\l  %20 = load i64* %p_36.addr, align 8\l  %conv55 = trunc i64 %20 to i16\l  %call56 = call i32 @func_41(i64 %conv54, i16* %18, i8* %19, i16 signext\l... %conv55)\l  %xor = xor i32 %6, %call56\l  %21 = load i32** %l_59, align 8\l  %22 = load i32* %21, align 4\l  %or = or i32 %22, %xor\l  store i32 %or, i32* %21, align 4\l  store i16 2, i16* @g_63, align 2\l  br label %for.cond57\l}"];
	Node0xb9f0038 -> Node0xb9f0068;
	Node0xb9f0068 [shape=record,label="{for.cond57:                                       \l  %23 = load i16* @g_63, align 2\l  %conv58 = zext i16 %23 to i32\l  %cmp59 = icmp sle i32 %conv58, 9\l  br i1 %cmp59, label %for.body61, label %for.end79\l|{<s0>T|<s1>F}}"];
	Node0xb9f0068:s0 -> Node0xb9f0098;
	Node0xb9f0068:s1 -> Node0xb9f01b8;
	Node0xb9f0098 [shape=record,label="{for.body61:                                       \l  store i64 0, i64* %p_36.addr, align 8\l  br label %for.cond63\l}"];
	Node0xb9f0098 -> Node0xb9f00c8;
	Node0xb9f00c8 [shape=record,label="{for.cond63:                                       \l  %24 = load i64* %p_36.addr, align 8\l  %cmp64 = icmp ule i64 %24, 9\l  br i1 %cmp64, label %for.body66, label %for.end71\l|{<s0>T|<s1>F}}"];
	Node0xb9f00c8:s0 -> Node0xb9f00f8;
	Node0xb9f00c8:s1 -> Node0xb9f0158;
	Node0xb9f00f8 [shape=record,label="{for.body66:                                       \l  %arrayidx67 = getelementptr inbounds [10 x [3 x i32*]]* %l_60, i32 0, i64 4\l  %arrayidx68 = getelementptr inbounds [3 x i32*]* %arrayidx67, i32 0, i64 1\l  store i32** %arrayidx68, i32*** %l_128, align 8\l  %arrayidx69 = getelementptr inbounds [10 x i32]* %l_58, i32 0, i64 8\l  %25 = load i32*** %l_128, align 8\l  store i32* %arrayidx69, i32** %25, align 8\l  %26 = load i32*** %l_128, align 8\l  store i32* @g_87, i32** %26, align 8\l  br label %for.inc70\l}"];
	Node0xb9f00f8 -> Node0xb9f0128;
	Node0xb9f0128 [shape=record,label="{for.inc70:                                        \l  %27 = load i64* %p_36.addr, align 8\l  %add = add i64 %27, 1\l  store i64 %add, i64* %p_36.addr, align 8\l  br label %for.cond63\l}"];
	Node0xb9f0128 -> Node0xb9f00c8;
	Node0xb9f0158 [shape=record,label="{for.end71:                                        \l  %28 = load i64* %p_36.addr, align 8\l  %conv72 = trunc i64 %28 to i32\l  %29 = load i16* @g_63, align 2\l  %idxprom73 = zext i16 %29 to i64\l  %arrayidx74 = getelementptr inbounds [10 x i32]* %l_58, i32 0, i64 %idxprom73\l  store i32 %conv72, i32* %arrayidx74, align 4\l  br label %for.inc75\l}"];
	Node0xb9f0158 -> Node0xb9f0188;
	Node0xb9f0188 [shape=record,label="{for.inc75:                                        \l  %30 = load i16* @g_63, align 2\l  %conv76 = zext i16 %30 to i32\l  %add77 = add nsw i32 %conv76, 1\l  %conv78 = trunc i32 %add77 to i16\l  store i16 %conv78, i16* @g_63, align 2\l  br label %for.cond57\l}"];
	Node0xb9f0188 -> Node0xb9f0068;
	Node0xb9f01b8 [shape=record,label="{for.end79:                                        \l  %31 = load i16** %p_35.addr, align 8\l  ret i16* %31\l}"];
}
