digraph "CFG for 'func_1' function" {
	label="CFG for 'func_1' function";

	Node0xb3d7430 [shape=record,label="{entry:\l  %l_7 = alloca i32, align 4\l  %l_17 = alloca i32, align 4\l  %l_24 = alloca i8*, align 8\l  %l_2235 = alloca i64, align 8\l  %l_2236 = alloca [9 x i32], align 16\l  %l_2239 = alloca i32, align 4\l  %i = alloca i32, align 4\l  store i32 -4, i32* %l_7, align 4\l  store i32 -1694253498, i32* %l_17, align 4\l  store i8* getelementptr inbounds ([2 x i8]* @g_25, i32 0, i64 0), i8**\l... %l_24, align 8\l  store i64 759864212347491295, i64* %l_2235, align 8\l  %0 = bitcast [9 x i32]* %l_2236 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([9 x i32]*\l... @func_1.l_2236 to i8*), i64 36, i32 16, i1 false)\l  store i32 0, i32* %l_2239, align 4\l  %1 = load i32* getelementptr inbounds ([4 x [6 x [5 x i32]]]* @g_6, i32 0,\l... i64 2, i64 4, i64 3), align 4\l  %conv = trunc i32 %1 to i8\l  %2 = load i32* %l_7, align 4\l  %3 = load i32* getelementptr inbounds ([4 x [6 x [5 x i32]]]* @g_6, i32 0,\l... i64 3, i64 3, i64 0), align 4\l  %conv1 = sext i32 %3 to i64\l  %cmp = icmp uge i64 %conv1, 0\l  br i1 %cmp, label %lor.end, label %lor.rhs\l|{<s0>T|<s1>F}}"];
	Node0xb3d7430:s0 -> Node0xb3d7490;
	Node0xb3d7430:s1 -> Node0xb3d7460;
	Node0xb3d7460 [shape=record,label="{lor.rhs:                                          \l  %4 = load i32* getelementptr inbounds ([4 x [6 x [5 x i32]]]* @g_6, i32 0,\l... i64 2, i64 4, i64 3), align 4\l  %conv3 = trunc i32 %4 to i8\l  %5 = load i32* %l_17, align 4\l  %conv4 = trunc i32 %5 to i8\l  %6 = load i32* getelementptr inbounds ([4 x [6 x [5 x i32]]]* @g_6, i32 0,\l... i64 1, i64 2, i64 3), align 4\l  %conv5 = trunc i32 %6 to i8\l  %7 = load i32* %l_7, align 4\l  %conv6 = trunc i32 %7 to i8\l  %call = call zeroext i8 @safe_mul_func_uint8_t_u_u(i8 zeroext %conv6, i8\l... zeroext -1)\l  %8 = load i32* getelementptr inbounds ([4 x [6 x [5 x i32]]]* @g_6, i32 0,\l... i64 3, i64 2, i64 0), align 4\l  %conv7 = trunc i32 %8 to i8\l  %call8 = call zeroext i8 @safe_mul_func_uint8_t_u_u(i8 zeroext %call, i8\l... zeroext %conv7)\l  %9 = load i32* getelementptr inbounds ([4 x [6 x [5 x i32]]]* @g_6, i32 0,\l... i64 3, i64 2, i64 2), align 4\l  %conv9 = trunc i32 %9 to i8\l  %call10 = call signext i8 @safe_mul_func_int8_t_s_s(i8 signext %call8, i8\l... signext %conv9)\l  %10 = load i32* getelementptr inbounds ([4 x [6 x [5 x i32]]]* @g_6, i32 0,\l... i64 2, i64 5, i64 0), align 4\l  %conv11 = trunc i32 %10 to i8\l  %11 = load i8** %l_24, align 8\l  store i8 %conv11, i8* %11, align 1\l  %12 = load i32* getelementptr inbounds ([4 x [6 x [5 x i32]]]* @g_6, i32 0,\l... i64 0, i64 5, i64 4), align 4\l  %conv12 = trunc i32 %12 to i8\l  %call13 = call signext i8 @func_12(i8 zeroext %conv4, i8 signext %conv5, i8\l... signext %conv11, i8 signext %conv12)\l  %call14 = call signext i8 @safe_div_func_int8_t_s_s(i8 signext %conv3, i8\l... signext %call13)\l  %13 = load i64* %l_2235, align 8\l  %conv15 = trunc i64 %13 to i8\l  %call16 = call signext i8 @safe_mod_func_int8_t_s_s(i8 signext %call14, i8\l... signext %conv15)\l  %conv17 = sext i8 %call16 to i64\l  %or = or i64 %conv17, 2529947836\l  %14 = load i32* %l_7, align 4\l  %tobool = icmp ne i32 %14, 0\l  br label %lor.end\l}"];
	Node0xb3d7460 -> Node0xb3d7490;
	Node0xb3d7490 [shape=record,label="{lor.end:                                          \l  %15 = phi i1 [ true, %entry ], [ %tobool, %lor.rhs ]\l  %lor.ext = zext i1 %15 to i32\l  %conv18 = sext i32 %lor.ext to i64\l  %cmp19 = icmp sge i64 %conv18, 7\l  %conv20 = zext i1 %cmp19 to i32\l  %16 = load i32* %l_17, align 4\l  %conv21 = trunc i32 %16 to i8\l  %call22 = call signext i8 @safe_mul_func_int8_t_s_s(i8 signext %conv, i8\l... signext %conv21)\l  %call23 = call zeroext i8 @safe_lshift_func_uint8_t_u_s(i8 zeroext %call22,\l... i32 0)\l  %conv24 = zext i8 %call23 to i32\l  %arrayidx = getelementptr inbounds [9 x i32]* %l_2236, i32 0, i64 1\l  %17 = load i32* %arrayidx, align 4\l  %and = and i32 %17, %conv24\l  store i32 %and, i32* %arrayidx, align 4\l  %18 = load volatile i32*** @g_2238, align 8\l  store i32* %l_7, i32** %18, align 8\l  %19 = load i32* %l_2239, align 4\l  ret i32 %19\l}"];
}
