digraph "CFG for 'crc32_8bytes' function" {
	label="CFG for 'crc32_8bytes' function";

	Node0xb79fb00 [shape=record,label="{entry:\l  %val.addr = alloca i64, align 8\l  store i64 %val, i64* %val.addr, align 8\l  %0 = load i64* %val.addr, align 8\l  %shr = lshr i64 %0, 0\l  %and = and i64 %shr, 255\l  %conv = trunc i64 %and to i8\l  call void @crc32_byte(i8 zeroext %conv)\l  %1 = load i64* %val.addr, align 8\l  %shr1 = lshr i64 %1, 8\l  %and2 = and i64 %shr1, 255\l  %conv3 = trunc i64 %and2 to i8\l  call void @crc32_byte(i8 zeroext %conv3)\l  %2 = load i64* %val.addr, align 8\l  %shr4 = lshr i64 %2, 16\l  %and5 = and i64 %shr4, 255\l  %conv6 = trunc i64 %and5 to i8\l  call void @crc32_byte(i8 zeroext %conv6)\l  %3 = load i64* %val.addr, align 8\l  %shr7 = lshr i64 %3, 24\l  %and8 = and i64 %shr7, 255\l  %conv9 = trunc i64 %and8 to i8\l  call void @crc32_byte(i8 zeroext %conv9)\l  %4 = load i64* %val.addr, align 8\l  %shr10 = lshr i64 %4, 32\l  %and11 = and i64 %shr10, 255\l  %conv12 = trunc i64 %and11 to i8\l  call void @crc32_byte(i8 zeroext %conv12)\l  %5 = load i64* %val.addr, align 8\l  %shr13 = lshr i64 %5, 40\l  %and14 = and i64 %shr13, 255\l  %conv15 = trunc i64 %and14 to i8\l  call void @crc32_byte(i8 zeroext %conv15)\l  %6 = load i64* %val.addr, align 8\l  %shr16 = lshr i64 %6, 48\l  %and17 = and i64 %shr16, 255\l  %conv18 = trunc i64 %and17 to i8\l  call void @crc32_byte(i8 zeroext %conv18)\l  %7 = load i64* %val.addr, align 8\l  %shr19 = lshr i64 %7, 56\l  %and20 = and i64 %shr19, 255\l  %conv21 = trunc i64 %and20 to i8\l  call void @crc32_byte(i8 zeroext %conv21)\l  ret void\l}"];
}
