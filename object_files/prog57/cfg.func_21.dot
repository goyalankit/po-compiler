digraph "CFG for 'func_21' function" {
	label="CFG for 'func_21' function";

	Node0xa64de60 [shape=record,label="{entry:\l  %p_22.addr = alloca i32*, align 8\l  %l_25 = alloca [3 x [3 x [4 x i16]]], align 16\l  %l_26 = alloca [1 x i8*], align 8\l  %l_28 = alloca i32, align 4\l  %l_29 = alloca i16*, align 8\l  %l_30 = alloca i16*, align 8\l  %l_46 = alloca [7 x [10 x [3 x i32]]], align 16\l  %l_51 = alloca i16**, align 8\l  %l_135 = alloca [5 x [8 x i8*]], align 16\l  %l_137 = alloca [10 x i32*], align 16\l  %l_138 = alloca i8, align 1\l  %l_141 = alloca [8 x i32], align 16\l  %l_142 = alloca i16*, align 8\l  %l_143 = alloca [2 x i16*], align 16\l  %l_145 = alloca i16, align 2\l  %l_146 = alloca i64*, align 8\l  %l_147 = alloca i64*, align 8\l  %l_155 = alloca [5 x [5 x [4 x i64]]], align 16\l  %l_159 = alloca i32**, align 8\l  %l_160 = alloca i8, align 1\l  %l_161 = alloca i32, align 4\l  %l_162 = alloca i32, align 4\l  %l_163 = alloca [6 x [3 x [2 x i32]]], align 16\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %k = alloca i32, align 4\l  %l_149 = alloca %struct.S0*, align 8\l  %l_148 = alloca %struct.S0**, align 8\l  %l_151 = alloca i32, align 4\l  %l_152 = alloca [4 x i32], align 16\l  %l_156 = alloca [8 x i32], align 16\l  %i77 = alloca i32, align 4\l  store i32* %p_22, i32** %p_22.addr, align 8\l  %0 = bitcast [3 x [3 x [4 x i16]]]* %l_25 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([3 x [3 x [4 x\l... i16]]]* @func_21.l_25 to i8*), i64 72, i32 16, i1 false)\l  store i32 1, i32* %l_28, align 4\l  %arrayidx = getelementptr inbounds [3 x [3 x [4 x i16]]]* %l_25, i32 0, i64 1\l  %arrayidx1 = getelementptr inbounds [3 x [4 x i16]]* %arrayidx, i32 0, i64 1\l  %arrayidx2 = getelementptr inbounds [4 x i16]* %arrayidx1, i32 0, i64 2\l  store i16* %arrayidx2, i16** %l_29, align 8\l  store i16* null, i16** %l_30, align 8\l  %1 = bitcast [7 x [10 x [3 x i32]]]* %l_46 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([7 x [10 x [3 x\l... i32]]]* @func_21.l_46 to i8*), i64 840, i32 16, i1 false)\l  store i16** %l_30, i16*** %l_51, align 8\l  %2 = bitcast [5 x [8 x i8*]]* %l_135 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* bitcast ([5 x [8 x i8*]]*\l... @func_21.l_135 to i8*), i64 320, i32 16, i1 false)\l  %3 = bitcast [10 x i32*]* %l_137 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* bitcast ([10 x i32*]*\l... @func_21.l_137 to i8*), i64 80, i32 16, i1 false)\l  store i8 37, i8* %l_138, align 1\l  %4 = bitcast [8 x i32]* %l_141 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* bitcast ([8 x i32]*\l... @func_21.l_141 to i8*), i64 32, i32 16, i1 false)\l  store i16* null, i16** %l_142, align 8\l  store i16 8, i16* %l_145, align 2\l  store i64* null, i64** %l_146, align 8\l  store i64* getelementptr inbounds ([2 x i64]* @g_117, i32 0, i64 1), i64**\l... %l_147, align 8\l  %5 = bitcast [5 x [5 x [4 x i64]]]* %l_155 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* bitcast ([5 x [5 x [4 x\l... i64]]]* @func_21.l_155 to i8*), i64 800, i32 16, i1 false)\l  %arrayidx3 = getelementptr inbounds [10 x i32*]* %l_137, i32 0, i64 6\l  store i32** %arrayidx3, i32*** %l_159, align 8\l  store i8 126, i8* %l_160, align 1\l  store i32 -786231110, i32* %l_161, align 4\l  store i32 2, i32* %l_162, align 4\l  %6 = bitcast [6 x [3 x [2 x i32]]]* %l_163 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* bitcast ([6 x [3 x [2 x\l... i32]]]* @func_21.l_163 to i8*), i64 144, i32 16, i1 false)\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0xa64de60 -> Node0xa64de90;
	Node0xa64de90 [shape=record,label="{for.cond:                                         \l  %7 = load i32* %i, align 4\l  %cmp = icmp slt i32 %7, 1\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0xa64de90:s0 -> Node0xa64dec0;
	Node0xa64de90:s1 -> Node0xa64df20;
	Node0xa64dec0 [shape=record,label="{for.body:                                         \l  %8 = load i32* %i, align 4\l  %idxprom = sext i32 %8 to i64\l  %arrayidx4 = getelementptr inbounds [1 x i8*]* %l_26, i32 0, i64 %idxprom\l  store i8* @g_27, i8** %arrayidx4, align 8\l  br label %for.inc\l}"];
	Node0xa64dec0 -> Node0xa64def0;
	Node0xa64def0 [shape=record,label="{for.inc:                                          \l  %9 = load i32* %i, align 4\l  %inc = add nsw i32 %9, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0xa64def0 -> Node0xa64de90;
	Node0xa64df20 [shape=record,label="{for.end:                                          \l  store i32 0, i32* %i, align 4\l  br label %for.cond5\l}"];
	Node0xa64df20 -> Node0xa64df50;
	Node0xa64df50 [shape=record,label="{for.cond5:                                        \l  %10 = load i32* %i, align 4\l  %cmp6 = icmp slt i32 %10, 2\l  br i1 %cmp6, label %for.body7, label %for.end12\l|{<s0>T|<s1>F}}"];
	Node0xa64df50:s0 -> Node0xa64df80;
	Node0xa64df50:s1 -> Node0xa64dfe0;
	Node0xa64df80 [shape=record,label="{for.body7:                                        \l  %11 = load i32* %i, align 4\l  %idxprom8 = sext i32 %11 to i64\l  %arrayidx9 = getelementptr inbounds [2 x i16*]* %l_143, i32 0, i64 %idxprom8\l  store i16* getelementptr inbounds ([5 x [4 x i16]]* @g_144, i32 0, i64 0,\l... i64 0), i16** %arrayidx9, align 8\l  br label %for.inc10\l}"];
	Node0xa64df80 -> Node0xa64dfb0;
	Node0xa64dfb0 [shape=record,label="{for.inc10:                                        \l  %12 = load i32* %i, align 4\l  %inc11 = add nsw i32 %12, 1\l  store i32 %inc11, i32* %i, align 4\l  br label %for.cond5\l}"];
	Node0xa64dfb0 -> Node0xa64df50;
	Node0xa64dfe0 [shape=record,label="{for.end12:                                        \l  %arrayidx13 = getelementptr inbounds [3 x [3 x [4 x i16]]]* %l_25, i32 0,\l... i64 1\l  %arrayidx14 = getelementptr inbounds [3 x [4 x i16]]* %arrayidx13, i32 0,\l... i64 1\l  %arrayidx15 = getelementptr inbounds [4 x i16]* %arrayidx14, i32 0, i64 2\l  %13 = load i16* %arrayidx15, align 2\l  %conv = zext i16 %13 to i32\l  store i32 %conv, i32* %l_28, align 4\l  %arrayidx16 = getelementptr inbounds [3 x [3 x [4 x i16]]]* %l_25, i32 0,\l... i64 1\l  %arrayidx17 = getelementptr inbounds [3 x [4 x i16]]* %arrayidx16, i32 0,\l... i64 1\l  %arrayidx18 = getelementptr inbounds [4 x i16]* %arrayidx17, i32 0, i64 2\l  %14 = load i16* %arrayidx18, align 2\l  %15 = load i16** %l_29, align 8\l  store i16 %14, i16* %15, align 2\l  %conv19 = zext i16 %14 to i32\l  store i32 %conv19, i32* %l_28, align 4\l  %16 = load i32* @g_31, align 4\l  %and = and i32 %16, %conv19\l  store i32 %and, i32* @g_31, align 4\l  %17 = load i32* getelementptr inbounds ([4 x i32]* @g_16, i32 0, i64 3),\l... align 4\l  %conv20 = trunc i32 %17 to i8\l  %18 = load i32* getelementptr inbounds ([4 x i32]* @g_16, i32 0, i64 3),\l... align 4\l  %arrayidx21 = getelementptr inbounds [7 x [10 x [3 x i32]]]* %l_46, i32 0,\l... i64 5\l  %arrayidx22 = getelementptr inbounds [10 x [3 x i32]]* %arrayidx21, i32 0,\l... i64 6\l  %arrayidx23 = getelementptr inbounds [3 x i32]* %arrayidx22, i32 0, i64 0\l  %19 = load i32* %arrayidx23, align 4\l  %conv24 = sext i32 %19 to i64\l  %cmp25 = icmp ugt i64 1, %conv24\l  %conv26 = zext i1 %cmp25 to i32\l  %20 = load i32* @g_10, align 4\l  %cmp27 = icmp eq i32 %conv26, %20\l  %conv28 = zext i1 %cmp27 to i32\l  %conv29 = sext i32 %conv28 to i64\l  %21 = load i16** @g_47, align 8\l  %arrayidx30 = getelementptr inbounds [1 x i8*]* %l_26, i32 0, i64 0\l  %22 = load i8** %arrayidx30, align 8\l  %arrayidx31 = getelementptr inbounds [7 x [10 x [3 x i32]]]* %l_46, i32 0,\l... i64 5\l  %arrayidx32 = getelementptr inbounds [10 x [3 x i32]]* %arrayidx31, i32 0,\l... i64 6\l  %arrayidx33 = getelementptr inbounds [3 x i32]* %arrayidx32, i32 0, i64 0\l  %23 = load i32* %arrayidx33, align 4\l  %conv34 = trunc i32 %23 to i16\l  %call = call i32 @func_41(i64 %conv29, i16* %21, i8* %22, i16 signext\l... %conv34)\l  %24 = load i16* @g_48, align 2\l  %conv35 = zext i16 %24 to i32\l  %cmp36 = icmp ne i32 %call, %conv35\l  %conv37 = zext i1 %cmp36 to i32\l  %conv38 = sext i32 %conv37 to i64\l  %call39 = call i16* @func_37(i8 zeroext %conv20, i32 %18, i64 %conv38)\l  %25 = load i16*** %l_51, align 8\l  store i16* %call39, i16** %25, align 8\l  %arrayidx40 = getelementptr inbounds [7 x [10 x [3 x i32]]]* %l_46, i32 0,\l... i64 1\l  %arrayidx41 = getelementptr inbounds [10 x [3 x i32]]* %arrayidx40, i32 0,\l... i64 5\l  %arrayidx42 = getelementptr inbounds [3 x i32]* %arrayidx41, i32 0, i64 2\l  %26 = load i32* %arrayidx42, align 4\l  %conv43 = sext i32 %26 to i64\l  %call44 = call i16* @func_34(i16* %call39, i64 %conv43)\l  %call45 = call signext i16 @func_32(i16* %call44)\l  %conv46 = sext i16 %call45 to i32\l  %cmp47 = icmp eq i32 %and, %conv46\l  %conv48 = zext i1 %cmp47 to i32\l  %27 = load i8* getelementptr inbounds ([2 x [1 x i8]]* @g_136, i32 0, i64 1,\l... i64 0), align 1\l  %conv49 = zext i8 %27 to i32\l  %and50 = and i32 %conv49, %conv48\l  %conv51 = trunc i32 %and50 to i8\l  store i8 %conv51, i8* getelementptr inbounds ([2 x [1 x i8]]* @g_136, i32 0,\l... i64 1, i64 0), align 1\l  %conv52 = zext i8 %conv51 to i32\l  %arrayidx53 = getelementptr inbounds [7 x [10 x [3 x i32]]]* %l_46, i32 0,\l... i64 5\l  %arrayidx54 = getelementptr inbounds [10 x [3 x i32]]* %arrayidx53, i32 0,\l... i64 6\l  %arrayidx55 = getelementptr inbounds [3 x i32]* %arrayidx54, i32 0, i64 0\l  %28 = load i32* %arrayidx55, align 4\l  %cmp56 = icmp sgt i32 %conv52, %28\l  %conv57 = zext i1 %cmp56 to i32\l  %arrayidx58 = getelementptr inbounds [7 x [10 x [3 x i32]]]* %l_46, i32 0,\l... i64 5\l  %arrayidx59 = getelementptr inbounds [10 x [3 x i32]]* %arrayidx58, i32 0,\l... i64 6\l  %arrayidx60 = getelementptr inbounds [3 x i32]* %arrayidx59, i32 0, i64 0\l  %29 = load i32* %arrayidx60, align 4\l  %or = or i32 %conv57, %29\l  %conv61 = trunc i32 %or to i16\l  %arrayidx62 = getelementptr inbounds [7 x [10 x [3 x i32]]]* %l_46, i32 0,\l... i64 5\l  %arrayidx63 = getelementptr inbounds [10 x [3 x i32]]* %arrayidx62, i32 0,\l... i64 6\l  %arrayidx64 = getelementptr inbounds [3 x i32]* %arrayidx63, i32 0, i64 0\l  %30 = load i32* %arrayidx64, align 4\l  %call65 = call zeroext i16 @safe_lshift_func_uint16_t_u_u(i16 zeroext\l... %conv61, i32 %30)\l  %conv66 = trunc i16 %call65 to i8\l  store i8 %conv66, i8* %l_138, align 1\l  %31 = load i8* @g_27, align 1\l  %conv67 = sext i8 %31 to i16\l  %arrayidx68 = getelementptr inbounds [8 x i32]* %l_141, i32 0, i64 4\l  %32 = load i32* %arrayidx68, align 4\l  %neg = xor i32 %32, -1\l  %conv69 = trunc i32 %neg to i16\l  store i16 %conv69, i16* %l_145, align 2\l  %call70 = call signext i16 @safe_add_func_int16_t_s_s(i16 signext %conv67,\l... i16 signext %conv69)\l  store i64* getelementptr inbounds ([2 x i64]* @g_117, i32 0, i64 1), i64**\l... %l_146, align 8\l  store i64* getelementptr inbounds ([1 x [1 x [7 x i64]]]* @g_116, i32 0, i64\l... 0, i64 0, i64 6), i64** %l_147, align 8\l  store i16 zext (i1 icmp ugt (i64 zext (i1 icmp eq (i64* getelementptr\l... inbounds ([2 x i64]* @g_117, i32 0, i64 1), i64* getelementptr inbounds ([1 x\l... [1 x [7 x i64]]]* @g_116, i32 0, i64 0, i64 0, i64 6)) to i64), i64 9) to\l... i16), i16* getelementptr inbounds ([5 x [4 x i16]]* @g_144, i32 0, i64 1, i64\l... 3), align 2\l  %33 = load i16*** %l_51, align 8\l  %34 = load i16** %33, align 8\l  %cmp71 = icmp eq i16* @g_63, %34\l  %conv72 = zext i1 %cmp71 to i32\l  %conv73 = sext i32 %conv72 to i64\l  %and74 = and i64 %conv73, 2647169924\l  %cmp75 = icmp sgt i64 zext (i1 icmp ugt (i64 zext (i1 icmp eq (i64*\l... getelementptr inbounds ([2 x i64]* @g_117, i32 0, i64 1), i64* getelementptr\l... inbounds ([1 x [1 x [7 x i64]]]* @g_116, i32 0, i64 0, i64 0, i64 6)) to\l... i64), i64 9) to i64), %and74\l  br i1 %cmp75, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0xa64dfe0:s0 -> Node0xa64e010;
	Node0xa64dfe0:s1 -> Node0xa64e040;
	Node0xa64e010 [shape=record,label="{if.then:                                          \l  store %struct.S0* bitcast (\{ i32, i64, i32, [4 x i8] \}* @g_150 to\l... %struct.S0*), %struct.S0** %l_149, align 8\l  store %struct.S0** %l_149, %struct.S0*** %l_148, align 8\l  %35 = load %struct.S0*** %l_148, align 8\l  store %struct.S0* null, %struct.S0** %35, align 8\l  br label %if.end\l}"];
	Node0xa64e010 -> Node0xa64e130;
	Node0xa64e040 [shape=record,label="{if.else:                                          \l  store i32 5, i32* %l_151, align 4\l  %36 = bitcast [8 x i32]* %l_156 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* bitcast ([8 x i32]*\l... @func_21.l_156 to i8*), i64 32, i32 16, i1 false)\l  store i32 0, i32* %i77, align 4\l  br label %for.cond78\l}"];
	Node0xa64e040 -> Node0xa64e070;
	Node0xa64e070 [shape=record,label="{for.cond78:                                       \l  %37 = load i32* %i77, align 4\l  %cmp79 = icmp slt i32 %37, 4\l  br i1 %cmp79, label %for.body81, label %for.end86\l|{<s0>T|<s1>F}}"];
	Node0xa64e070:s0 -> Node0xa64e0a0;
	Node0xa64e070:s1 -> Node0xa64e100;
	Node0xa64e0a0 [shape=record,label="{for.body81:                                       \l  %38 = load i32* %i77, align 4\l  %idxprom82 = sext i32 %38 to i64\l  %arrayidx83 = getelementptr inbounds [4 x i32]* %l_152, i32 0, i64 %idxprom82\l  store i32 -494923304, i32* %arrayidx83, align 4\l  br label %for.inc84\l}"];
	Node0xa64e0a0 -> Node0xa64e0d0;
	Node0xa64e0d0 [shape=record,label="{for.inc84:                                        \l  %39 = load i32* %i77, align 4\l  %inc85 = add nsw i32 %39, 1\l  store i32 %inc85, i32* %i77, align 4\l  br label %for.cond78\l}"];
	Node0xa64e0d0 -> Node0xa64e070;
	Node0xa64e100 [shape=record,label="{for.end86:                                        \l  %arrayidx87 = getelementptr inbounds [8 x i32]* %l_156, i32 0, i64 5\l  %40 = load i32* %arrayidx87, align 4\l  %inc88 = add i32 %40, 1\l  store i32 %inc88, i32* %arrayidx87, align 4\l  br label %if.end\l}"];
	Node0xa64e100 -> Node0xa64e130;
	Node0xa64e130 [shape=record,label="{if.end:                                           \l  %41 = load i32*** %l_159, align 8\l  store i32* getelementptr inbounds ([4 x i32]* @g_16, i32 0, i64 3), i32**\l... %41, align 8\l  %arrayidx89 = getelementptr inbounds [6 x [3 x [2 x i32]]]* %l_163, i32 0,\l... i64 0\l  %arrayidx90 = getelementptr inbounds [3 x [2 x i32]]* %arrayidx89, i32 0,\l... i64 1\l  %arrayidx91 = getelementptr inbounds [2 x i32]* %arrayidx90, i32 0, i64 0\l  %42 = load i32* %arrayidx91, align 4\l  %inc92 = add i32 %42, 1\l  store i32 %inc92, i32* %arrayidx91, align 4\l  ret i32* getelementptr inbounds ([4 x i32]* @g_16, i32 0, i64 1)\l}"];
}
