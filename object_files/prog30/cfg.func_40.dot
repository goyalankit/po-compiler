digraph "CFG for 'func_40' function" {
	label="CFG for 'func_40' function";

	Node0xb786ae8 [shape=record,label="{entry:\l  %p_41.addr = alloca i32, align 4\l  %p_42.addr = alloca i32, align 4\l  %p_43.addr = alloca i32, align 4\l  %p_44.addr = alloca i32*, align 8\l  %l_346 = alloca i8, align 1\l  %l_357 = alloca i64, align 8\l  %l_359 = alloca i32*, align 8\l  store i32 %p_41, i32* %p_41.addr, align 4\l  store i32 %p_42, i32* %p_42.addr, align 4\l  store i32 %p_43, i32* %p_43.addr, align 4\l  store i32* %p_44, i32** %p_44.addr, align 8\l  store i8 -1, i8* %l_346, align 1\l  store i64 1934205247479616699, i64* %l_357, align 8\l  store i32* @g_82, i32** %l_359, align 8\l  %0 = load i16* @g_200, align 2\l  %conv = trunc i16 %0 to i8\l  %1 = load i64* getelementptr inbounds ([5 x i64]* @g_68, i32 0, i64 1),\l... align 8\l  %conv1 = trunc i64 %1 to i8\l  store i8 %conv1, i8* %l_346, align 1\l  %conv2 = sext i8 %conv1 to i32\l  %tobool = icmp ne i32 %conv2, 0\l  br i1 %tobool, label %lor.end28, label %lor.rhs\l|{<s0>T|<s1>F}}"];
	Node0xb786ae8:s0 -> Node0xb786c08;
	Node0xb786ae8:s1 -> Node0xb786b18;
	Node0xb786b18 [shape=record,label="{lor.rhs:                                          \l  %2 = load i8* %l_346, align 1\l  %conv3 = sext i8 %2 to i32\l  %3 = load i32* %p_43.addr, align 4\l  %conv4 = trunc i32 %3 to i16\l  %4 = load i8* %l_346, align 1\l  %conv5 = sext i8 %4 to i32\l  %5 = load i32* getelementptr inbounds ([4 x [3 x [7 x i32]]]* @g_8, i32 0,\l... i64 0, i64 0, i64 1), align 4\l  %6 = load i8* %l_346, align 1\l  %conv6 = sext i8 %6 to i32\l  %and = and i32 %5, %conv6\l  %conv7 = sext i32 %and to i64\l  %or = or i64 %conv7, 1934205247479616699\l  %tobool8 = icmp ne i64 %or, 0\l  br i1 %tobool8, label %land.rhs, label %land.end\l|{<s0>T|<s1>F}}"];
	Node0xb786b18:s0 -> Node0xb786b48;
	Node0xb786b18:s1 -> Node0xb786b78;
	Node0xb786b48 [shape=record,label="{land.rhs:                                         \l  %7 = load i32* %p_42.addr, align 4\l  %tobool9 = icmp ne i32 %7, 0\l  br label %land.end\l}"];
	Node0xb786b48 -> Node0xb786b78;
	Node0xb786b78 [shape=record,label="{land.end:                                         \l  %8 = phi i1 [ false, %lor.rhs ], [ %tobool9, %land.rhs ]\l  %land.ext = zext i1 %8 to i32\l  %and10 = and i32 %conv5, %land.ext\l  %call = call signext i16 @safe_lshift_func_int16_t_s_u(i16 signext %conv4,\l... i32 %and10)\l  %9 = load i32* %p_41.addr, align 4\l  %conv11 = sext i32 %9 to i64\l  %call12 = call i64 @safe_add_func_int64_t_s_s(i64 2, i64 %conv11)\l  %or13 = or i64 -10, %call12\l  %tobool14 = icmp ne i64 %or13, 0\l  br i1 %tobool14, label %lor.end, label %lor.rhs15\l|{<s0>T|<s1>F}}"];
	Node0xb786b78:s0 -> Node0xb786bd8;
	Node0xb786b78:s1 -> Node0xb786ba8;
	Node0xb786ba8 [shape=record,label="{lor.rhs15:                                        \l  %10 = load i8** @g_281, align 8\l  %11 = load i8* %10, align 1\l  %conv16 = sext i8 %11 to i32\l  %tobool17 = icmp ne i32 %conv16, 0\l  br label %lor.end\l}"];
	Node0xb786ba8 -> Node0xb786bd8;
	Node0xb786bd8 [shape=record,label="{lor.end:                                          \l  %12 = phi i1 [ true, %land.end ], [ %tobool17, %lor.rhs15 ]\l  %lor.ext = zext i1 %12 to i32\l  %conv18 = trunc i32 %lor.ext to i16\l  %call19 = call signext i16 @safe_lshift_func_int16_t_s_s(i16 signext\l... %conv18, i32 7)\l  %conv20 = sext i16 %call19 to i32\l  %cmp = icmp slt i32 %conv3, %conv20\l  %conv21 = zext i1 %cmp to i32\l  %conv22 = trunc i32 %conv21 to i16\l  %13 = load i16*** @g_231, align 8\l  %14 = load i16** %13, align 8\l  store i16 %conv22, i16* %14, align 2\l  %call23 = call zeroext i16 @safe_add_func_uint16_t_u_u(i16 zeroext 0, i16\l... zeroext -1556)\l  %conv24 = zext i16 %call23 to i32\l  %call25 = call zeroext i8 @safe_lshift_func_uint8_t_u_u(i8 zeroext 7, i32\l... %conv24)\l  %conv26 = zext i8 %call25 to i32\l  %tobool27 = icmp ne i32 %conv26, 0\l  br label %lor.end28\l}"];
	Node0xb786bd8 -> Node0xb786c08;
	Node0xb786c08 [shape=record,label="{lor.end28:                                        \l  %15 = phi i1 [ true, %entry ], [ %tobool27, %lor.end ]\l  %lor.ext29 = zext i1 %15 to i32\l  %16 = load volatile i32* @g_9, align 4\l  %cmp30 = icmp sgt i32 %lor.ext29, %16\l  %conv31 = zext i1 %cmp30 to i32\l  %conv32 = trunc i32 %conv31 to i8\l  %17 = load i8* getelementptr inbounds (%union.U0* @g_61, i32 0, i32 0),\l... align 1\l  %call33 = call signext i8 @safe_sub_func_int8_t_s_s(i8 signext %conv32, i8\l... signext %17)\l  store i8 %call33, i8* @g_358, align 1\l  %conv34 = sext i8 %call33 to i32\l  %18 = load i32** %l_359, align 8\l  %19 = load i32** %l_359, align 8\l  %20 = load i32* %19, align 4\l  %conv35 = trunc i32 %20 to i16\l  %21 = load i32* %p_41.addr, align 4\l  %conv36 = sext i32 %21 to i64\l  %call37 = call i32* @func_47(i8 zeroext %conv, i32 %conv34, i32* %18, i16\l... signext %conv35, i64 %conv36)\l  store i32* %call37, i32** %l_359, align 8\l  %22 = load i32** %l_359, align 8\l  %23 = load i32* %22, align 4\l  %conv38 = trunc i32 %23 to i16\l  ret i16 %conv38\l}"];
}
