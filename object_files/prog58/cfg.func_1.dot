digraph "CFG for 'func_1' function" {
	label="CFG for 'func_1' function";

	Node0xb8dac60 [shape=record,label="{entry:\l  %l_2 = alloca i32*, align 8\l  %l_4 = alloca i32, align 4\l  %l_5 = alloca i32*, align 8\l  %l_6 = alloca i32*, align 8\l  %l_7 = alloca i32*, align 8\l  %l_8 = alloca i32, align 4\l  %l_9 = alloca i32*, align 8\l  %l_10 = alloca [6 x [6 x [2 x i32]]], align 16\l  %l_11 = alloca i32*, align 8\l  %l_12 = alloca i32*, align 8\l  %l_13 = alloca i32*, align 8\l  %l_14 = alloca i32*, align 8\l  %l_15 = alloca i32*, align 8\l  %l_16 = alloca [10 x i32*], align 16\l  %l_18 = alloca i32, align 4\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %k = alloca i32, align 4\l  store i32* @g_3, i32** %l_2, align 8\l  store i32 1988732324, i32* %l_4, align 4\l  store i32* %l_4, i32** %l_5, align 8\l  store i32* @g_3, i32** %l_6, align 8\l  store i32* %l_4, i32** %l_7, align 8\l  store i32 6, i32* %l_8, align 4\l  store i32* %l_8, i32** %l_9, align 8\l  %0 = bitcast [6 x [6 x [2 x i32]]]* %l_10 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([6 x [6 x [2 x\l... i32]]]* @func_1.l_10 to i8*), i64 288, i32 16, i1 false)\l  store i32* %l_4, i32** %l_11, align 8\l  %arrayidx = getelementptr inbounds [6 x [6 x [2 x i32]]]* %l_10, i32 0, i64 3\l  %arrayidx1 = getelementptr inbounds [6 x [2 x i32]]* %arrayidx, i32 0, i64 0\l  %arrayidx2 = getelementptr inbounds [2 x i32]* %arrayidx1, i32 0, i64 0\l  store i32* %arrayidx2, i32** %l_12, align 8\l  store i32* %l_8, i32** %l_13, align 8\l  store i32* null, i32** %l_14, align 8\l  %arrayidx3 = getelementptr inbounds [6 x [6 x [2 x i32]]]* %l_10, i32 0, i64\l... 0\l  %arrayidx4 = getelementptr inbounds [6 x [2 x i32]]* %arrayidx3, i32 0, i64 3\l  %arrayidx5 = getelementptr inbounds [2 x i32]* %arrayidx4, i32 0, i64 0\l  store i32* %arrayidx5, i32** %l_15, align 8\l  %1 = bitcast [10 x i32*]* %l_16 to i8*\l  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 80, i32 16, i1 false)\l  store i32 260607061, i32* %l_18, align 4\l  %2 = load i16* @g_19, align 2\l  %inc = add i16 %2, 1\l  store i16 %inc, i16* @g_19, align 2\l  %3 = load i64* @g_17, align 8\l  %conv = trunc i64 %3 to i32\l  ret i32 %conv\l}"];
}
