digraph "CFG for 'func_2' function" {
	label="CFG for 'func_2' function";

	Node0x9e22e80 [shape=record,label="{entry:\l  %p_3.addr = alloca i8, align 1\l  %p_4.addr = alloca i16, align 2\l  %p_5.addr = alloca i16, align 2\l  %p_6.addr = alloca i32, align 4\l  %p_7.addr = alloca i32, align 4\l  %l_47 = alloca i32*, align 8\l  %l_58 = alloca i32, align 4\l  %l_59 = alloca i32, align 4\l  %l_60 = alloca i32, align 4\l  %l_61 = alloca i32, align 4\l  %l_63 = alloca i32, align 4\l  %l_64 = alloca i32, align 4\l  %l_65 = alloca [2 x i32], align 4\l  %l_80 = alloca i64, align 8\l  %i = alloca i32, align 4\l  %agg.tmp.ensured = alloca %union.U0, align 8\l  %l_54 = alloca i32*, align 8\l  %l_55 = alloca i32*, align 8\l  %l_56 = alloca [3 x [3 x [1 x i32]]], align 16\l  %l_57 = alloca [7 x i32*], align 16\l  %l_62 = alloca i32, align 4\l  %l_66 = alloca i32, align 4\l  %l_77 = alloca i32*, align 8\l  %i8 = alloca i32, align 4\l  %j = alloca i32, align 4\l  %k = alloca i32, align 4\l  store i8 %p_3, i8* %p_3.addr, align 1\l  store i16 %p_4, i16* %p_4.addr, align 2\l  store i16 %p_5, i16* %p_5.addr, align 2\l  store i32 %p_6, i32* %p_6.addr, align 4\l  store i32 %p_7, i32* %p_7.addr, align 4\l  store i32* @g_9, i32** %l_47, align 8\l  store i32 1, i32* %l_58, align 4\l  store i32 7, i32* %l_59, align 4\l  store i32 97555489, i32* %l_60, align 4\l  store i32 -9, i32* %l_61, align 4\l  store i32 1436346256, i32* %l_63, align 4\l  store i32 -1742982905, i32* %l_64, align 4\l  store i64 3301815481320505709, i64* %l_80, align 8\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x9e22e80 -> Node0x9e22eb0;
	Node0x9e22eb0 [shape=record,label="{for.cond:                                         \l  %0 = load i32* %i, align 4\l  %cmp = icmp slt i32 %0, 2\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x9e22eb0:s0 -> Node0x9e22ee0;
	Node0x9e22eb0:s1 -> Node0x9e22f40;
	Node0x9e22ee0 [shape=record,label="{for.body:                                         \l  %1 = load i32* %i, align 4\l  %idxprom = sext i32 %1 to i64\l  %arrayidx = getelementptr inbounds [2 x i32]* %l_65, i32 0, i64 %idxprom\l  store i32 -1855300524, i32* %arrayidx, align 4\l  br label %for.inc\l}"];
	Node0x9e22ee0 -> Node0x9e22f10;
	Node0x9e22f10 [shape=record,label="{for.inc:                                          \l  %2 = load i32* %i, align 4\l  %inc = add nsw i32 %2, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x9e22f10 -> Node0x9e22eb0;
	Node0x9e22f40 [shape=record,label="{for.end:                                          \l  %3 = load i32** %l_47, align 8\l  %cmp1 = icmp eq i32* null, %3\l  %conv = zext i1 %cmp1 to i32\l  %call = call zeroext i16 @func_18(i32 %conv)\l  %4 = bitcast %union.U0* %agg.tmp.ensured to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* bitcast (%union.U0* @g_48\l... to i8*), i64 8, i32 8, i1 true)\l  %5 = load i16* @g_30, align 2\l  %call2 = call zeroext i16 @safe_mul_func_uint16_t_u_u(i16 zeroext %call, i16\l... zeroext %5)\l  %6 = load i32** %l_47, align 8\l  %7 = load i32* %6, align 4\l  %8 = load i32** %l_47, align 8\l  store i32 %7, i32* %8, align 4\l  store i16 0, i16* @g_29, align 2\l  br label %for.cond3\l}"];
	Node0x9e22f40 -> Node0x9e22f70;
	Node0x9e22f70 [shape=record,label="{for.cond3:                                        \l  %9 = load i16* @g_29, align 2\l  %conv4 = sext i16 %9 to i32\l  %cmp5 = icmp sle i32 %conv4, 29\l  br i1 %cmp5, label %for.body7, label %for.end50\l|{<s0>T|<s1>F}}"];
	Node0x9e22f70:s0 -> Node0x9e22fa0;
	Node0x9e22f70:s1 -> Node0x9e23360;
	Node0x9e22fa0 [shape=record,label="{for.body7:                                        \l  store i32* null, i32** %l_54, align 8\l  store i32* @g_9, i32** %l_55, align 8\l  store i32 -1, i32* %l_62, align 4\l  store i32 798197540, i32* %l_66, align 4\l  store i32* %l_63, i32** %l_77, align 8\l  store i32 0, i32* %i8, align 4\l  br label %for.cond9\l}"];
	Node0x9e22fa0 -> Node0x9e22fd0;
	Node0x9e22fd0 [shape=record,label="{for.cond9:                                        \l  %10 = load i32* %i8, align 4\l  %cmp10 = icmp slt i32 %10, 3\l  br i1 %cmp10, label %for.body12, label %for.end35\l|{<s0>T|<s1>F}}"];
	Node0x9e22fd0:s0 -> Node0x9e23000;
	Node0x9e22fd0:s1 -> Node0x9e231e0;
	Node0x9e23000 [shape=record,label="{for.body12:                                       \l  store i32 0, i32* %j, align 4\l  br label %for.cond13\l}"];
	Node0x9e23000 -> Node0x9e23030;
	Node0x9e23030 [shape=record,label="{for.cond13:                                       \l  %11 = load i32* %j, align 4\l  %cmp14 = icmp slt i32 %11, 3\l  br i1 %cmp14, label %for.body16, label %for.end32\l|{<s0>T|<s1>F}}"];
	Node0x9e23030:s0 -> Node0x9e23060;
	Node0x9e23030:s1 -> Node0x9e23180;
	Node0x9e23060 [shape=record,label="{for.body16:                                       \l  store i32 0, i32* %k, align 4\l  br label %for.cond17\l}"];
	Node0x9e23060 -> Node0x9e23090;
	Node0x9e23090 [shape=record,label="{for.cond17:                                       \l  %12 = load i32* %k, align 4\l  %cmp18 = icmp slt i32 %12, 1\l  br i1 %cmp18, label %for.body20, label %for.end29\l|{<s0>T|<s1>F}}"];
	Node0x9e23090:s0 -> Node0x9e230c0;
	Node0x9e23090:s1 -> Node0x9e23120;
	Node0x9e230c0 [shape=record,label="{for.body20:                                       \l  %13 = load i32* %k, align 4\l  %idxprom21 = sext i32 %13 to i64\l  %14 = load i32* %j, align 4\l  %idxprom22 = sext i32 %14 to i64\l  %15 = load i32* %i8, align 4\l  %idxprom23 = sext i32 %15 to i64\l  %arrayidx24 = getelementptr inbounds [3 x [3 x [1 x i32]]]* %l_56, i32 0,\l... i64 %idxprom23\l  %arrayidx25 = getelementptr inbounds [3 x [1 x i32]]* %arrayidx24, i32 0,\l... i64 %idxprom22\l  %arrayidx26 = getelementptr inbounds [1 x i32]* %arrayidx25, i32 0, i64\l... %idxprom21\l  store i32 1, i32* %arrayidx26, align 4\l  br label %for.inc27\l}"];
	Node0x9e230c0 -> Node0x9e230f0;
	Node0x9e230f0 [shape=record,label="{for.inc27:                                        \l  %16 = load i32* %k, align 4\l  %inc28 = add nsw i32 %16, 1\l  store i32 %inc28, i32* %k, align 4\l  br label %for.cond17\l}"];
	Node0x9e230f0 -> Node0x9e23090;
	Node0x9e23120 [shape=record,label="{for.end29:                                        \l  br label %for.inc30\l}"];
	Node0x9e23120 -> Node0x9e23150;
	Node0x9e23150 [shape=record,label="{for.inc30:                                        \l  %17 = load i32* %j, align 4\l  %inc31 = add nsw i32 %17, 1\l  store i32 %inc31, i32* %j, align 4\l  br label %for.cond13\l}"];
	Node0x9e23150 -> Node0x9e23030;
	Node0x9e23180 [shape=record,label="{for.end32:                                        \l  br label %for.inc33\l}"];
	Node0x9e23180 -> Node0x9e231b0;
	Node0x9e231b0 [shape=record,label="{for.inc33:                                        \l  %18 = load i32* %i8, align 4\l  %inc34 = add nsw i32 %18, 1\l  store i32 %inc34, i32* %i8, align 4\l  br label %for.cond9\l}"];
	Node0x9e231b0 -> Node0x9e22fd0;
	Node0x9e231e0 [shape=record,label="{for.end35:                                        \l  store i32 0, i32* %i8, align 4\l  br label %for.cond36\l}"];
	Node0x9e231e0 -> Node0x9e23210;
	Node0x9e23210 [shape=record,label="{for.cond36:                                       \l  %19 = load i32* %i8, align 4\l  %cmp37 = icmp slt i32 %19, 7\l  br i1 %cmp37, label %for.body39, label %for.end47\l|{<s0>T|<s1>F}}"];
	Node0x9e23210:s0 -> Node0x9e23240;
	Node0x9e23210:s1 -> Node0x9e232a0;
	Node0x9e23240 [shape=record,label="{for.body39:                                       \l  %arrayidx40 = getelementptr inbounds [3 x [3 x [1 x i32]]]* %l_56, i32 0,\l... i64 1\l  %arrayidx41 = getelementptr inbounds [3 x [1 x i32]]* %arrayidx40, i32 0,\l... i64 0\l  %arrayidx42 = getelementptr inbounds [1 x i32]* %arrayidx41, i32 0, i64 0\l  %20 = load i32* %i8, align 4\l  %idxprom43 = sext i32 %20 to i64\l  %arrayidx44 = getelementptr inbounds [7 x i32*]* %l_57, i32 0, i64 %idxprom43\l  store i32* %arrayidx42, i32** %arrayidx44, align 8\l  br label %for.inc45\l}"];
	Node0x9e23240 -> Node0x9e23270;
	Node0x9e23270 [shape=record,label="{for.inc45:                                        \l  %21 = load i32* %i8, align 4\l  %inc46 = add nsw i32 %21, 1\l  store i32 %inc46, i32* %i8, align 4\l  br label %for.cond36\l}"];
	Node0x9e23270 -> Node0x9e23210;
	Node0x9e232a0 [shape=record,label="{for.end47:                                        \l  %22 = load volatile i8*** @g_51, align 8\l  %23 = load volatile i8**** @g_53, align 8\l  store volatile i8** %22, i8*** %23, align 8\l  %24 = load i32* %l_66, align 4\l  %dec = add i32 %24, -1\l  store i32 %dec, i32* %l_66, align 4\l  %25 = load i32** %l_47, align 8\l  %26 = load i32* %25, align 4\l  %tobool = icmp ne i32 %26, 0\l  br i1 %tobool, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x9e232a0:s0 -> Node0x9e232d0;
	Node0x9e232a0:s1 -> Node0x9e23300;
	Node0x9e232d0 [shape=record,label="{if.then:                                          \l  br label %for.inc48\l}"];
	Node0x9e232d0 -> Node0x9e23330;
	Node0x9e23300 [shape=record,label="{if.end:                                           \l  br label %for.inc48\l}"];
	Node0x9e23300 -> Node0x9e23330;
	Node0x9e23330 [shape=record,label="{for.inc48:                                        \l  %27 = load i16* @g_29, align 2\l  %call49 = call zeroext i16 @safe_add_func_uint16_t_u_u(i16 zeroext %27, i16\l... zeroext 6)\l  store i16 %call49, i16* @g_29, align 2\l  br label %for.cond3\l}"];
	Node0x9e23330 -> Node0x9e22f70;
	Node0x9e23360 [shape=record,label="{for.end50:                                        \l  %28 = load i64** @g_1540, align 8\l  %29 = load i64* %28, align 8\l  ret i64 %29\l}"];
}
