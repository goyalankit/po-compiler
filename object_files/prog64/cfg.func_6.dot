digraph "CFG for 'func_6' function" {
	label="CFG for 'func_6' function";

	Node0xa8f85b8 [shape=record,label="{entry:\l  %retval = alloca i64, align 8\l  %p_7.addr = alloca i16, align 2\l  %p_8.addr = alloca i32*, align 8\l  %l_2421 = alloca i16**, align 8\l  store i16 %p_7, i16* %p_7.addr, align 2\l  store i32* %p_8, i32** %p_8.addr, align 8\l  store i16** null, i16*** %l_2421, align 8\l  %0 = load %union.U0** @g_985, align 8\l  %1 = load i16*** %l_2421, align 8\l  %2 = load i16**** @g_1022, align 8\l  store i16** %1, i16*** %2, align 8\l  %cmp = icmp eq i16** %1, null\l  %conv = zext i1 %cmp to i32\l  %conv1 = sext i32 %conv to i64\l  %cmp2 = icmp slt i64 224049696130767212, %conv1\l  %conv3 = zext i1 %cmp2 to i32\l  %3 = load i32*** @g_2115, align 8\l  %4 = load volatile i32** %3, align 8\l  %5 = load i32* %4, align 4\l  %or = or i32 %5, %conv3\l  store i32 %or, i32* %4, align 4\l  store i32 19, i32* @g_423, align 4\l  br label %for.cond\l}"];
	Node0xa8f85b8 -> Node0xa8f85e8;
	Node0xa8f85e8 [shape=record,label="{for.cond:                                         \l  %6 = load i32* @g_423, align 4\l  %cmp4 = icmp sge i32 %6, -4\l  br i1 %cmp4, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0xa8f85e8:s0 -> Node0xa8f8618;
	Node0xa8f85e8:s1 -> Node0xa8f8678;
	Node0xa8f8618 [shape=record,label="{for.body:                                         \l  %7 = load i16* %p_7.addr, align 2\l  %conv6 = sext i16 %7 to i64\l  store i64 %conv6, i64* %retval\l  br label %return\l}"];
	Node0xa8f8618 -> Node0xa8f86a8;
	Node0xa8f8648 [shape=record,label="{for.inc:                                          \l  %8 = load i32* @g_423, align 4\l  %conv7 = trunc i32 %8 to i16\l  %call = call zeroext i16 @safe_sub_func_uint16_t_u_u(i16 zeroext %conv7, i16\l... zeroext 5)\l  %conv8 = zext i16 %call to i32\l  store i32 %conv8, i32* @g_423, align 4\l  br label %for.cond\l}"];
	Node0xa8f8648 -> Node0xa8f85e8;
	Node0xa8f8678 [shape=record,label="{for.end:                                          \l  %9 = load i16* %p_7.addr, align 2\l  %conv9 = sext i16 %9 to i64\l  store i64 %conv9, i64* %retval\l  br label %return\l}"];
	Node0xa8f8678 -> Node0xa8f86a8;
	Node0xa8f86a8 [shape=record,label="{return:                                           \l  %10 = load i64* %retval\l  ret i64 %10\l}"];
}
