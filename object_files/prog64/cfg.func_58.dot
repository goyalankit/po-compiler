digraph "CFG for 'func_58' function" {
	label="CFG for 'func_58' function";

	Node0xa9138f0 [shape=record,label="{entry:\l  %retval = alloca %union.U2, align 4\l  %p_59.addr = alloca i16, align 2\l  %p_60.addr = alloca i64*, align 8\l  %p_61.addr = alloca i32, align 4\l  %l_1067 = alloca i32*, align 8\l  %l_1072 = alloca i32, align 4\l  %l_1073 = alloca i64*, align 8\l  %l_1074 = alloca i64*, align 8\l  %l_1075 = alloca i32, align 4\l  %l_1076 = alloca i64*, align 8\l  %l_1077 = alloca i32*, align 8\l  %l_1082 = alloca i8*, align 8\l  %l_1091 = alloca [5 x i16***], align 16\l  %l_1098 = alloca i32*, align 8\l  %l_1097 = alloca i32**, align 8\l  %l_1102 = alloca i32**, align 8\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  store i16 %p_59, i16* %p_59.addr, align 2\l  store i64* %p_60, i64** %p_60.addr, align 8\l  store i32 %p_61, i32* %p_61.addr, align 4\l  store i32* @g_119, i32** %l_1067, align 8\l  store i32 1, i32* %l_1072, align 4\l  store i64* @g_141, i64** %l_1073, align 8\l  store i64* @g_366, i64** %l_1074, align 8\l  store i32 -6, i32* %l_1075, align 4\l  store i64* @g_415, i64** %l_1076, align 8\l  store i32* @g_756, i32** %l_1077, align 8\l  store i8* @g_344, i8** %l_1082, align 8\l  store i32* null, i32** %l_1098, align 8\l  store i32** %l_1098, i32*** %l_1097, align 8\l  store i32** %l_1077, i32*** %l_1102, align 8\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0xa9138f0 -> Node0xa913920;
	Node0xa913920 [shape=record,label="{for.cond:                                         \l  %0 = load i32* %i, align 4\l  %cmp = icmp slt i32 %0, 5\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0xa913920:s0 -> Node0xa913950;
	Node0xa913920:s1 -> Node0xa9139b0;
	Node0xa913950 [shape=record,label="{for.body:                                         \l  %1 = load i32* %i, align 4\l  %idxprom = sext i32 %1 to i64\l  %arrayidx = getelementptr inbounds [5 x i16***]* %l_1091, i32 0, i64 %idxprom\l  store i16*** getelementptr inbounds ([2 x i16**]* @g_1089, i32 0, i64 1),\l... i16**** %arrayidx, align 8\l  br label %for.inc\l}"];
	Node0xa913950 -> Node0xa913980;
	Node0xa913980 [shape=record,label="{for.inc:                                          \l  %2 = load i32* %i, align 4\l  %inc = add nsw i32 %2, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0xa913980 -> Node0xa913920;
	Node0xa9139b0 [shape=record,label="{for.end:                                          \l  %3 = load i32** @g_33, align 8\l  %4 = load i32* %3, align 4\l  %5 = load i32** %l_1067, align 8\l  %6 = load i32* %5, align 4\l  %inc1 = add i32 %6, 1\l  store i32 %inc1, i32* %5, align 4\l  %conv = zext i32 %6 to i64\l  %7 = load i32* %l_1072, align 4\l  %conv2 = zext i32 %7 to i64\l  %or = or i64 %conv2, 5\l  %8 = load i32* %p_61.addr, align 4\l  %9 = load i32* %l_1072, align 4\l  %or3 = or i32 %8, %9\l  %conv4 = zext i32 %or3 to i64\l  %cmp5 = icmp ugt i64 %or, %conv4\l  br i1 %cmp5, label %lor.end, label %lor.rhs\l|{<s0>T|<s1>F}}"];
	Node0xa9139b0:s0 -> Node0xa913a10;
	Node0xa9139b0:s1 -> Node0xa9139e0;
	Node0xa9139e0 [shape=record,label="{lor.rhs:                                          \l  %10 = load i16* %p_59.addr, align 2\l  %conv7 = zext i16 %10 to i64\l  %cmp8 = icmp eq i64 32670, %conv7\l  %conv9 = zext i1 %cmp8 to i32\l  %11 = load i32* %l_1072, align 4\l  %cmp10 = icmp ne i32 %conv9, %11\l  %conv11 = zext i1 %cmp10 to i32\l  %12 = load i32* %l_1072, align 4\l  %tobool = icmp ne i32 %12, 0\l  br label %lor.end\l}"];
	Node0xa9139e0 -> Node0xa913a10;
	Node0xa913a10 [shape=record,label="{lor.end:                                          \l  %13 = phi i1 [ true, %for.end ], [ %tobool, %lor.rhs ]\l  %lor.ext = zext i1 %13 to i32\l  %conv12 = trunc i32 %lor.ext to i8\l  %call = call signext i8 @safe_mul_func_int8_t_s_s(i8 signext %conv12, i8\l... signext -9)\l  %conv13 = sext i8 %call to i64\l  %or14 = or i64 987233681, %conv13\l  %cmp15 = icmp ne i64 %conv, %or14\l  %conv16 = zext i1 %cmp15 to i32\l  %conv17 = trunc i32 %conv16 to i16\l  %call18 = call signext i16 @safe_unary_minus_func_int16_t_s(i16 signext\l... %conv17)\l  %call19 = call signext i16 @safe_sub_func_int16_t_s_s(i16 signext %call18,\l... i16 signext -24758)\l  %conv20 = sext i16 %call19 to i32\l  %or21 = or i32 %4, %conv20\l  %conv22 = trunc i32 %or21 to i8\l  %14 = load i32* %p_61.addr, align 4\l  %conv23 = trunc i32 %14 to i8\l  %call24 = call zeroext i8 @safe_div_func_uint8_t_u_u(i8 zeroext %conv22, i8\l... zeroext %conv23)\l  %conv25 = zext i8 %call24 to i32\l  %15 = load i32* %l_1072, align 4\l  %cmp26 = icmp eq i32 %conv25, %15\l  %conv27 = zext i1 %cmp26 to i32\l  %16 = load i16* %p_59.addr, align 2\l  %conv28 = zext i16 %16 to i32\l  %cmp29 = icmp sgt i32 %conv27, %conv28\l  %conv30 = zext i1 %cmp29 to i32\l  %conv31 = sext i32 %conv30 to i64\l  %and = and i64 %conv31, 1794953425\l  %17 = load i32* %p_61.addr, align 4\l  %conv32 = zext i32 %17 to i64\l  %or33 = or i64 %and, %conv32\l  %conv34 = trunc i64 %or33 to i32\l  %18 = load i32** @g_308, align 8\l  store i32 %conv34, i32* %18, align 4\l  %tobool35 = icmp ne i32 %conv34, 0\l  br i1 %tobool35, label %land.rhs, label %land.end\l|{<s0>T|<s1>F}}"];
	Node0xa913a10:s0 -> Node0xa913a40;
	Node0xa913a10:s1 -> Node0xa913a70;
	Node0xa913a40 [shape=record,label="{land.rhs:                                         \l  %19 = load i32* %p_61.addr, align 4\l  %tobool36 = icmp ne i32 %19, 0\l  br label %land.end\l}"];
	Node0xa913a40 -> Node0xa913a70;
	Node0xa913a70 [shape=record,label="{land.end:                                         \l  %20 = phi i1 [ false, %lor.end ], [ %tobool36, %land.rhs ]\l  %land.ext = zext i1 %20 to i32\l  %conv37 = sext i32 %land.ext to i64\l  %21 = load i64** %l_1073, align 8\l  store i64 %conv37, i64* %21, align 8\l  %22 = load i64** %l_1074, align 8\l  store i64 %conv37, i64* %22, align 8\l  %23 = load i32* %l_1075, align 4\l  %conv38 = sext i32 %23 to i64\l  %and39 = and i64 %conv38, %conv37\l  %conv40 = trunc i64 %and39 to i32\l  store i32 %conv40, i32* %l_1075, align 4\l  %conv41 = sext i32 %conv40 to i64\l  %24 = load i64** %l_1076, align 8\l  %25 = load i64* %24, align 8\l  %or42 = or i64 %25, %conv41\l  store i64 %or42, i64* %24, align 8\l  %26 = load i32* %l_1072, align 4\l  %conv43 = zext i32 %26 to i64\l  %call44 = call i64 @safe_div_func_int64_t_s_s(i64 %or42, i64 %conv43)\l  %27 = load i32* %p_61.addr, align 4\l  %28 = load i16* %p_59.addr, align 2\l  %conv45 = zext i16 %28 to i32\l  %call46 = call i32 @safe_div_func_uint32_t_u_u(i32 %27, i32 %conv45)\l  %29 = load i16* %p_59.addr, align 2\l  %conv47 = zext i16 %29 to i32\l  %30 = load i32** %l_1077, align 8\l  store i32 %conv47, i32* %30, align 4\l  %31 = load i8** %l_1082, align 8\l  store i8 43, i8* %31, align 1\l  store i16*** null, i16**** @g_1088, align 8\l  %arrayidx48 = getelementptr inbounds [5 x i16***]* %l_1091, i32 0, i64 4\l  %32 = load i16**** %arrayidx48, align 8\l  %cmp49 = icmp ne i16*** null, %32\l  %conv50 = zext i1 %cmp49 to i32\l  %conv51 = sext i32 %conv50 to i64\l  %call52 = call i64 @safe_add_func_int64_t_s_s(i64 %conv51, i64\l... -3587864398235780501)\l  %call53 = call zeroext i16 @safe_unary_minus_func_uint16_t_u(i16 zeroext\l... 29212)\l  %conv54 = trunc i16 %call53 to i8\l  %call55 = call signext i8 @safe_rshift_func_int8_t_s_u(i8 signext %conv54,\l... i32 4)\l  %call56 = call zeroext i8 @safe_sub_func_uint8_t_u_u(i8 zeroext 43, i8\l... zeroext %call55)\l  %conv57 = zext i8 %call56 to i32\l  %33 = load i32** %l_1077, align 8\l  store i32 %conv57, i32* %33, align 4\l  %conv58 = sext i32 %conv57 to i64\l  %bf.load = load volatile i8* getelementptr inbounds (\{ i8, [7 x i8] \}*\l... @g_359, i32 0, i32 0), align 8\l  %bf.clear = and i8 %bf.load, 15\l  %bf.cast = zext i8 %bf.clear to i32\l  %34 = load i32*** %l_1097, align 8\l  store i32** %34, i32*** %l_1097, align 8\l  %cmp59 = icmp eq i32** %34, %l_1098\l  %conv60 = zext i1 %cmp59 to i32\l  %conv61 = sext i32 %conv60 to i64\l  %35 = load i32* %p_61.addr, align 4\l  %conv62 = trunc i32 %35 to i16\l  %36 = load i32* %p_61.addr, align 4\l  %conv63 = trunc i32 %36 to i16\l  %call64 = call signext i16 @safe_div_func_int16_t_s_s(i16 signext %conv62,\l... i16 signext %conv63)\l  %conv65 = sext i16 %call64 to i64\l  %cmp66 = icmp ult i64 %conv65, 65530\l  %conv67 = zext i1 %cmp66 to i32\l  %cmp68 = icmp ugt i64 %conv61, 4294967289\l  %conv69 = zext i1 %cmp68 to i32\l  %conv70 = sext i32 %conv69 to i64\l  %call71 = call i64 @safe_unary_minus_func_int64_t_s(i64 %conv70)\l  %cmp72 = icmp uge i64 %call71, 1\l  %conv73 = zext i1 %cmp72 to i32\l  %conv74 = sext i32 %conv73 to i64\l  %xor = xor i64 %conv74, 2823435479\l  %37 = load i16* %p_59.addr, align 2\l  %conv75 = zext i16 %37 to i64\l  %and76 = and i64 %xor, %conv75\l  %38 = load i32* %p_61.addr, align 4\l  %conv77 = zext i32 %38 to i64\l  %cmp78 = icmp sle i64 %and76, %conv77\l  %conv79 = zext i1 %cmp78 to i32\l  %39 = load i32** @g_308, align 8\l  %40 = load i32* %39, align 4\l  %cmp80 = icmp sgt i32 %conv79, %40\l  br i1 %cmp80, label %land.rhs82, label %land.end85\l|{<s0>T|<s1>F}}"];
	Node0xa913a70:s0 -> Node0xa913aa0;
	Node0xa913a70:s1 -> Node0xa913ad0;
	Node0xa913aa0 [shape=record,label="{land.rhs82:                                       \l  %41 = load i16* %p_59.addr, align 2\l  %conv83 = zext i16 %41 to i32\l  %tobool84 = icmp ne i32 %conv83, 0\l  br label %land.end85\l}"];
	Node0xa913aa0 -> Node0xa913ad0;
	Node0xa913ad0 [shape=record,label="{land.end85:                                       \l  %42 = phi i1 [ false, %land.end ], [ %tobool84, %land.rhs82 ]\l  %land.ext86 = zext i1 %42 to i32\l  %conv87 = trunc i32 %land.ext86 to i8\l  %43 = load i32* %l_1075, align 4\l  %call88 = call signext i8 @safe_lshift_func_int8_t_s_s(i8 signext %conv87,\l... i32 %43)\l  %44 = load i32* %p_61.addr, align 4\l  %conv89 = zext i32 %44 to i64\l  %call90 = call i64 @safe_mod_func_uint64_t_u_u(i64 1536777253917106463, i64\l... %conv89)\l  %or91 = or i64 %conv58, %call90\l  %45 = load i16***** getelementptr inbounds ([8 x [5 x i16****]]*\l... @func_58.l_1101, i32 0, i64 4, i64 3), align 8\l  %46 = load i16***** getelementptr inbounds ([8 x [5 x i16****]]*\l... @func_58.l_1101, i32 0, i64 4, i64 3), align 8\l  %cmp92 = icmp eq i16**** %45, %46\l  %conv93 = zext i1 %cmp92 to i32\l  %call94 = call i32 @safe_div_func_int32_t_s_s(i32 %conv93, i32 -498029072)\l  %47 = load i32*** %l_1102, align 8\l  store i32* null, i32** %47, align 8\l  %48 = bitcast %union.U2* %retval to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* bitcast (%union.U2*\l... @func_58.l_1103 to i8*), i64 4, i32 4, i1 false)\l  %coerce.dive = getelementptr %union.U2* %retval, i32 0, i32 0\l  %49 = load i32* %coerce.dive\l  ret i32 %49\l}"];
}
