digraph "CFG for 'func_22' function" {
	label="CFG for 'func_22' function";

	Node0xb68cd60 [shape=record,label="{entry:\l  %p_23.addr = alloca i32, align 4\l  %p_24.addr = alloca i8, align 1\l  %p_25.addr = alloca %union.U4*, align 8\l  %p_26.addr = alloca i32, align 4\l  %l_2338 = alloca [10 x i16], align 16\l  %l_2339 = alloca i32, align 4\l  %l_2340 = alloca i8, align 1\l  %l_2343 = alloca i8, align 1\l  %l_2348 = alloca i8, align 1\l  %l_2361 = alloca i16, align 2\l  %l_2366 = alloca i32*, align 8\l  %l_2367 = alloca i32, align 4\l  %l_2368 = alloca i32*, align 8\l  %l_2369 = alloca i32*, align 8\l  %l_2370 = alloca i32*, align 8\l  %l_2371 = alloca i32*, align 8\l  %l_2372 = alloca [10 x i32*], align 16\l  %l_2373 = alloca [2 x [1 x [3 x i8]]], align 1\l  %l_2374 = alloca [2 x i8], align 1\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %k = alloca i32, align 4\l  %l_2337 = alloca [9 x [5 x i32*]], align 16\l  %i13 = alloca i32, align 4\l  %j14 = alloca i32, align 4\l  %agg.tmp.ensured = alloca %union.U7, align 8\l  store i32 %p_23, i32* %p_23.addr, align 4\l  store i8 %p_24, i8* %p_24.addr, align 1\l  store %union.U4* %p_25, %union.U4** %p_25.addr, align 8\l  store i32 %p_26, i32* %p_26.addr, align 4\l  %0 = bitcast [10 x i16]* %l_2338 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([10 x i16]*\l... @func_22.l_2338 to i8*), i64 20, i32 16, i1 false)\l  store i32 -1, i32* %l_2339, align 4\l  store i8 118, i8* %l_2340, align 1\l  store i8 -43, i8* %l_2343, align 1\l  store i8 0, i8* %l_2348, align 1\l  store i16 0, i16* %l_2361, align 2\l  store i32* bitcast (%union.U7* @g_1375 to i32*), i32** %l_2366, align 8\l  store i32 1, i32* %l_2367, align 4\l  store i32* bitcast (%union.U7* @g_1375 to i32*), i32** %l_2368, align 8\l  store i32* bitcast (%union.U7* @g_280 to i32*), i32** %l_2369, align 8\l  store i32* %l_2367, i32** %l_2370, align 8\l  store i32* null, i32** %l_2371, align 8\l  %1 = bitcast [2 x [1 x [3 x i8]]]* %l_2373 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* getelementptr inbounds ([2\l... x [1 x [3 x i8]]]* @func_22.l_2373, i32 0, i32 0, i32 0, i32 0), i64 6, i32\l... 1, i1 false)\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0xb68cd60 -> Node0xb68cd90;
	Node0xb68cd90 [shape=record,label="{for.cond:                                         \l  %2 = load i32* %i, align 4\l  %cmp = icmp slt i32 %2, 10\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0xb68cd90:s0 -> Node0xb68cdc0;
	Node0xb68cd90:s1 -> Node0xb68ce20;
	Node0xb68cdc0 [shape=record,label="{for.body:                                         \l  %3 = load i32* %i, align 4\l  %idxprom = sext i32 %3 to i64\l  %arrayidx = getelementptr inbounds [10 x i32*]* %l_2372, i32 0, i64 %idxprom\l  store i32* null, i32** %arrayidx, align 8\l  br label %for.inc\l}"];
	Node0xb68cdc0 -> Node0xb68cdf0;
	Node0xb68cdf0 [shape=record,label="{for.inc:                                          \l  %4 = load i32* %i, align 4\l  %inc = add nsw i32 %4, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0xb68cdf0 -> Node0xb68cd90;
	Node0xb68ce20 [shape=record,label="{for.end:                                          \l  store i32 0, i32* %i, align 4\l  br label %for.cond1\l}"];
	Node0xb68ce20 -> Node0xb68ce50;
	Node0xb68ce50 [shape=record,label="{for.cond1:                                        \l  %5 = load i32* %i, align 4\l  %cmp2 = icmp slt i32 %5, 2\l  br i1 %cmp2, label %for.body3, label %for.end8\l|{<s0>T|<s1>F}}"];
	Node0xb68ce50:s0 -> Node0xb68ce80;
	Node0xb68ce50:s1 -> Node0xb68cee0;
	Node0xb68ce80 [shape=record,label="{for.body3:                                        \l  %6 = load i32* %i, align 4\l  %idxprom4 = sext i32 %6 to i64\l  %arrayidx5 = getelementptr inbounds [2 x i8]* %l_2374, i32 0, i64 %idxprom4\l  store i8 0, i8* %arrayidx5, align 1\l  br label %for.inc6\l}"];
	Node0xb68ce80 -> Node0xb68ceb0;
	Node0xb68ceb0 [shape=record,label="{for.inc6:                                         \l  %7 = load i32* %i, align 4\l  %inc7 = add nsw i32 %7, 1\l  store i32 %inc7, i32* %i, align 4\l  br label %for.cond1\l}"];
	Node0xb68ceb0 -> Node0xb68ce50;
	Node0xb68cee0 [shape=record,label="{for.end8:                                         \l  store i8 0, i8* getelementptr inbounds (\{ i8, [7 x i8] \}* @g_644, i32 0, i32\l... 0), align 1\l  br label %for.cond9\l}"];
	Node0xb68cee0 -> Node0xb68cf10;
	Node0xb68cf10 [shape=record,label="{for.cond9:                                        \l  %8 = load i8* getelementptr inbounds (\{ i8, [7 x i8] \}* @g_644, i32 0, i32\l... 0), align 1\l  %conv = zext i8 %8 to i32\l  %cmp10 = icmp sle i32 %conv, 11\l  br i1 %cmp10, label %for.body12, label %for.end18\l|{<s0>T|<s1>F}}"];
	Node0xb68cf10:s0 -> Node0xb68cf40;
	Node0xb68cf10:s1 -> Node0xb68cfa0;
	Node0xb68cf40 [shape=record,label="{for.body12:                                       \l  %9 = bitcast [9 x [5 x i32*]]* %l_2337 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* bitcast ([9 x [5 x i32*]]*\l... @func_22.l_2337 to i8*), i64 360, i32 16, i1 false)\l  %10 = load i8* %l_2340, align 1\l  %inc15 = add i8 %10, 1\l  store i8 %inc15, i8* %l_2340, align 1\l  br label %for.inc16\l}"];
	Node0xb68cf40 -> Node0xb68cf70;
	Node0xb68cf70 [shape=record,label="{for.inc16:                                        \l  %11 = load i8* getelementptr inbounds (\{ i8, [7 x i8] \}* @g_644, i32 0, i32\l... 0), align 1\l  %inc17 = add i8 %11, 1\l  store i8 %inc17, i8* getelementptr inbounds (\{ i8, [7 x i8] \}* @g_644, i32\l... 0, i32 0), align 1\l  br label %for.cond9\l}"];
	Node0xb68cf70 -> Node0xb68cf10;
	Node0xb68cfa0 [shape=record,label="{for.end18:                                        \l  %12 = load i8* %l_2343, align 1\l  %conv19 = sext i8 %12 to i32\l  %call = call signext i8 @safe_lshift_func_int8_t_s_u(i8 signext 5, i32 5)\l  %conv20 = sext i8 %call to i32\l  %conv21 = trunc i32 %conv20 to i16\l  %13 = load i32* %p_26.addr, align 4\l  %arrayidx22 = getelementptr inbounds [10 x i16]* %l_2338, i32 0, i64 1\l  %14 = load i16* %arrayidx22, align 2\l  %conv23 = sext i16 %14 to i32\l  %neg = xor i32 %conv23, -1\l  %conv24 = trunc i32 %neg to i16\l  %15 = bitcast %union.U7* %agg.tmp.ensured to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* bitcast (%union.U7*\l... @g_2355 to i8*), i64 8, i32 8, i1 true)\l  br i1 true, label %land.rhs, label %land.end\l|{<s0>T|<s1>F}}"];
	Node0xb68cfa0:s0 -> Node0xb68cfd0;
	Node0xb68cfa0:s1 -> Node0xb68d060;
	Node0xb68cfd0 [shape=record,label="{land.rhs:                                         \l  %16 = load i16* %l_2361, align 2\l  %conv25 = zext i16 %16 to i32\l  %17 = load i8** @g_2269, align 8\l  %18 = load i8* %17, align 1\l  %conv26 = zext i8 %18 to i32\l  %or = or i32 %conv26, %conv25\l  %conv27 = trunc i32 %or to i8\l  store i8 %conv27, i8* %17, align 1\l  %conv28 = zext i8 %conv27 to i32\l  %19 = load i8* %l_2340, align 1\l  %conv29 = zext i8 %19 to i32\l  %20 = load i32* %p_23.addr, align 4\l  %cmp30 = icmp ne i32 %conv29, %20\l  %conv31 = zext i1 %cmp30 to i32\l  %conv32 = trunc i32 %conv31 to i8\l  %21 = load i8* %l_2340, align 1\l  %call33 = call signext i8 @safe_mul_func_int8_t_s_s(i8 signext %conv32, i8\l... signext %21)\l  %conv34 = sext i8 %call33 to i16\l  %call35 = call zeroext i16 @safe_lshift_func_uint16_t_u_s(i16 zeroext\l... %conv34, i32 8)\l  %conv36 = zext i16 %call35 to i32\l  %cmp37 = icmp sge i32 %conv28, %conv36\l  br i1 %cmp37, label %lor.end, label %lor.rhs\l|{<s0>T|<s1>F}}"];
	Node0xb68cfd0:s0 -> Node0xb68d030;
	Node0xb68cfd0:s1 -> Node0xb68d000;
	Node0xb68d000 [shape=record,label="{lor.rhs:                                          \l  %22 = load i32* %p_26.addr, align 4\l  %tobool = icmp ne i32 %22, 0\l  br label %lor.end\l}"];
	Node0xb68d000 -> Node0xb68d030;
	Node0xb68d030 [shape=record,label="{lor.end:                                          \l  %23 = phi i1 [ true, %land.rhs ], [ %tobool, %lor.rhs ]\l  %lor.ext = zext i1 %23 to i32\l  %24 = load i8* %p_24.addr, align 1\l  %conv39 = sext i8 %24 to i32\l  %cmp40 = icmp ne i32 %lor.ext, %conv39\l  %conv41 = zext i1 %cmp40 to i32\l  %conv42 = trunc i32 %conv41 to i8\l  %25 = load i8* %l_2343, align 1\l  %conv43 = sext i8 %25 to i32\l  %call44 = call zeroext i8 @safe_rshift_func_uint8_t_u_u(i8 zeroext %conv42,\l... i32 %conv43)\l  %conv45 = zext i8 %call44 to i64\l  %call46 = call i64 @safe_unary_minus_func_uint64_t_u(i64 %conv45)\l  %26 = load i32* %l_2339, align 4\l  %conv47 = trunc i32 %26 to i8\l  %27 = load i32* %p_26.addr, align 4\l  %call48 = call signext i8 @safe_rshift_func_int8_t_s_s(i8 signext %conv47,\l... i32 %27)\l  %conv49 = sext i8 %call48 to i32\l  %tobool50 = icmp ne i32 %conv49, 0\l  br label %land.end\l}"];
	Node0xb68d030 -> Node0xb68d060;
	Node0xb68d060 [shape=record,label="{land.end:                                         \l  %28 = phi i1 [ false, %for.end18 ], [ %tobool50, %lor.end ]\l  %land.ext = zext i1 %28 to i32\l  %arrayidx51 = getelementptr inbounds [10 x i16]* %l_2338, i32 0, i64 1\l  %29 = load i16* %arrayidx51, align 2\l  %conv52 = sext i16 %29 to i32\l  %or53 = or i32 %land.ext, %conv52\l  store i32 %or53, i32* %l_2339, align 4\l  %conv54 = trunc i32 %or53 to i16\l  %call55 = call zeroext i16 @safe_add_func_uint16_t_u_u(i16 zeroext %conv24,\l... i16 zeroext %conv54)\l  %conv56 = trunc i16 %call55 to i8\l  %30 = load i32* %p_23.addr, align 4\l  %conv57 = trunc i32 %30 to i8\l  %call58 = call zeroext i8 @safe_sub_func_uint8_t_u_u(i8 zeroext %conv56, i8\l... zeroext %conv57)\l  %call59 = call zeroext i8 @safe_div_func_uint8_t_u_u(i8 zeroext %call58, i8\l... zeroext 0)\l  %conv60 = zext i8 %call59 to i32\l  %cmp61 = icmp ne i32 %13, %conv60\l  %conv62 = zext i1 %cmp61 to i32\l  %31 = load i16* %l_2361, align 2\l  %conv63 = zext i16 %31 to i32\l  %cmp64 = icmp sge i32 %conv62, %conv63\l  %conv65 = zext i1 %cmp64 to i32\l  %conv66 = sext i32 %conv65 to i64\l  %32 = load i64*** @g_578, align 8\l  %33 = load i64** %32, align 8\l  store i64 %conv66, i64* %33, align 8\l  %tobool67 = icmp ne i64 %conv66, 0\l  br i1 %tobool67, label %land.rhs68, label %land.end69\l|{<s0>T|<s1>F}}"];
	Node0xb68d060:s0 -> Node0xb68d090;
	Node0xb68d060:s1 -> Node0xb68d0c0;
	Node0xb68d090 [shape=record,label="{land.rhs68:                                       \l  br label %land.end69\l}"];
	Node0xb68d090 -> Node0xb68d0c0;
	Node0xb68d0c0 [shape=record,label="{land.end69:                                       \l  %34 = phi i1 [ false, %land.end ], [ false, %land.rhs68 ]\l  %land.ext70 = zext i1 %34 to i32\l  %call71 = call signext i16 @safe_lshift_func_int16_t_s_s(i16 signext\l... %conv21, i32 %land.ext70)\l  %conv72 = sext i16 %call71 to i32\l  %cmp73 = icmp ne i32 %conv19, %conv72\l  %conv74 = zext i1 %cmp73 to i32\l  %35 = load i32* %l_2367, align 4\l  %and = and i32 %35, %conv74\l  store i32 %and, i32* %l_2367, align 4\l  %arrayidx75 = getelementptr inbounds [2 x i8]* %l_2374, i32 0, i64 1\l  %36 = load i8* %arrayidx75, align 1\l  %inc76 = add i8 %36, 1\l  store i8 %inc76, i8* %arrayidx75, align 1\l  ret i8* @g_908\l}"];
}
