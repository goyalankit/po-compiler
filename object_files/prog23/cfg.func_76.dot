digraph "CFG for 'func_76' function" {
	label="CFG for 'func_76' function";

	Node0xb794048 [shape=record,label="{entry:\l  %p_77.addr = alloca i32, align 4\l  %p_78.addr = alloca i16*, align 8\l  %l_256 = alloca i32, align 4\l  %l_275 = alloca i32*, align 8\l  store i32 %p_77, i32* %p_77.addr, align 4\l  store i16* %p_78, i16** %p_78.addr, align 8\l  store i32 -10, i32* %l_256, align 4\l  store i32* @g_276, i32** %l_275, align 8\l  %0 = load i32* %l_256, align 4\l  %1 = load i32* %l_256, align 4\l  %2 = load i32* %l_256, align 4\l  %3 = load i8** @g_110, align 8\l  %4 = load i8* %3, align 1\l  %conv = sext i8 %4 to i64\l  %5 = load i32* %l_256, align 4\l  %conv1 = zext i32 %5 to i64\l  %cmp = icmp sgt i64 41094, %conv1\l  br i1 %cmp, label %lor.end, label %lor.rhs\l|{<s0>T|<s1>F}}"];
	Node0xb794048:s0 -> Node0xb7940a8;
	Node0xb794048:s1 -> Node0xb794078;
	Node0xb794078 [shape=record,label="{lor.rhs:                                          \l  %6 = load i32* %l_256, align 4\l  %tobool = icmp ne i32 %6, 0\l  br label %lor.end\l}"];
	Node0xb794078 -> Node0xb7940a8;
	Node0xb7940a8 [shape=record,label="{lor.end:                                          \l  %7 = phi i1 [ true, %entry ], [ %tobool, %lor.rhs ]\l  %lor.ext = zext i1 %7 to i32\l  %conv3 = sext i32 %lor.ext to i64\l  %xor = xor i64 %conv3, 5\l  %8 = load i32* %p_77.addr, align 4\l  %conv4 = zext i32 %8 to i64\l  %call = call i64 @safe_add_func_int64_t_s_s(i64 %xor, i64 %conv4)\l  %9 = load i32* %p_77.addr, align 4\l  %conv5 = trunc i32 %9 to i16\l  %call6 = call signext i16 @safe_mod_func_int16_t_s_s(i16 signext 21852, i16\l... signext %conv5)\l  %conv7 = sext i16 %call6 to i32\l  %10 = load i32* %p_77.addr, align 4\l  %cmp8 = icmp ule i32 %conv7, %10\l  %conv9 = zext i1 %cmp8 to i32\l  %conv10 = sext i32 %conv9 to i64\l  %11 = load i32* @g_16, align 4\l  %conv11 = sext i32 %11 to i64\l  %call12 = call i64 @safe_mod_func_uint64_t_u_u(i64 %conv10, i64 %conv11)\l  %cmp13 = icmp uge i64 %conv, %call12\l  br i1 %cmp13, label %lor.end16, label %lor.rhs15\l|{<s0>T|<s1>F}}"];
	Node0xb7940a8:s0 -> Node0xb794108;
	Node0xb7940a8:s1 -> Node0xb7940d8;
	Node0xb7940d8 [shape=record,label="{lor.rhs15:                                        \l  br label %lor.end16\l}"];
	Node0xb7940d8 -> Node0xb794108;
	Node0xb794108 [shape=record,label="{lor.end16:                                        \l  %12 = phi i1 [ true, %lor.end ], [ true, %lor.rhs15 ]\l  %lor.ext17 = zext i1 %12 to i32\l  %and = and i32 %2, %lor.ext17\l  %xor18 = xor i32 %1, %and\l  %13 = load i8** @g_110, align 8\l  %14 = load i8* %13, align 1\l  %conv19 = sext i8 %14 to i64\l  %cmp20 = icmp eq i64 %conv19, 240\l  %conv21 = zext i1 %cmp20 to i32\l  %15 = load i32* %p_77.addr, align 4\l  %cmp22 = icmp eq i32 %conv21, %15\l  %land.ext = zext i1 %cmp22 to i32\l  %conv24 = trunc i32 %land.ext to i8\l  %call25 = call zeroext i8 @safe_sub_func_uint8_t_u_u(i8 zeroext 1, i8\l... zeroext %conv24)\l  %conv26 = zext i8 %call25 to i16\l  %call27 = call zeroext i16 @safe_lshift_func_uint16_t_u_u(i16 zeroext\l... %conv26, i32 14)\l  %conv28 = trunc i16 %call27 to i8\l  %16 = load i32* %p_77.addr, align 4\l  %call29 = call zeroext i8 @safe_lshift_func_uint8_t_u_s(i8 zeroext %conv28,\l... i32 %16)\l  %conv30 = zext i8 %call29 to i32\l  %17 = load i32* %p_77.addr, align 4\l  %and31 = and i32 %conv30, %17\l  %conv32 = trunc i32 %and31 to i16\l  %18 = load i32* %p_77.addr, align 4\l  %conv33 = trunc i32 %18 to i16\l  %call34 = call zeroext i16 @safe_sub_func_uint16_t_u_u(i16 zeroext %conv32,\l... i16 zeroext %conv33)\l  %call35 = call signext i16 @safe_lshift_func_int16_t_s_s(i16 signext\l... %call34, i32 4)\l  %conv36 = sext i16 %call35 to i32\l  %cmp37 = icmp ugt i32 %0, %conv36\l  %conv38 = zext i1 %cmp37 to i32\l  %conv39 = sext i32 %conv38 to i64\l  %and40 = and i64 %conv39, 3094213397\l  %cmp41 = icmp sle i64 %and40, 21508\l  %conv42 = zext i1 %cmp41 to i32\l  %19 = load i32** %l_275, align 8\l  %20 = load i32* %19, align 4\l  %and43 = and i32 %20, %conv42\l  store i32 %and43, i32* %19, align 4\l  %21 = load i32** %l_275, align 8\l  ret i32* %21\l}"];
}
