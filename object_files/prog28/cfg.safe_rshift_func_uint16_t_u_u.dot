digraph "CFG for 'safe_rshift_func_uint16_t_u_u' function" {
	label="CFG for 'safe_rshift_func_uint16_t_u_u' function";

	Node0xa62e608 [shape=record,label="{entry:\l  %left.addr = alloca i16, align 2\l  %right.addr = alloca i32, align 4\l  store i16 %left, i16* %left.addr, align 2\l  store i32 %right, i32* %right.addr, align 4\l  %0 = load i32* %right.addr, align 4\l  %cmp = icmp uge i32 %0, 32\l  br i1 %cmp, label %cond.true, label %cond.false\l|{<s0>T|<s1>F}}"];
	Node0xa62e608:s0 -> Node0xa62e638;
	Node0xa62e608:s1 -> Node0xa62e668;
	Node0xa62e638 [shape=record,label="{cond.true:                                        \l  %1 = load i16* %left.addr, align 2\l  %conv = zext i16 %1 to i32\l  br label %cond.end\l}"];
	Node0xa62e638 -> Node0xa62e698;
	Node0xa62e668 [shape=record,label="{cond.false:                                       \l  %2 = load i16* %left.addr, align 2\l  %conv1 = zext i16 %2 to i32\l  %3 = load i32* %right.addr, align 4\l  %shr = ashr i32 %conv1, %3\l  br label %cond.end\l}"];
	Node0xa62e668 -> Node0xa62e698;
	Node0xa62e698 [shape=record,label="{cond.end:                                         \l  %cond = phi i32 [ %conv, %cond.true ], [ %shr, %cond.false ]\l  %conv2 = trunc i32 %cond to i16\l  ret i16 %conv2\l}"];
}
