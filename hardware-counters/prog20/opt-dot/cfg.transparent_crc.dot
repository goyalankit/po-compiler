digraph "CFG for 'transparent_crc' function" {
	label="CFG for 'transparent_crc' function";

	Node0x2db12d0 [shape=record,label="{entry:\l  %b.addr.i55.i = alloca i8, align 1\l  %b.addr.i46.i = alloca i8, align 1\l  %b.addr.i37.i = alloca i8, align 1\l  %b.addr.i28.i = alloca i8, align 1\l  %b.addr.i19.i = alloca i8, align 1\l  %b.addr.i10.i = alloca i8, align 1\l  %b.addr.i1.i = alloca i8, align 1\l  %b.addr.i.i = alloca i8, align 1\l  %val.addr.i = alloca i64, align 8\l  %val.addr = alloca i64, align 8\l  %vname.addr = alloca i8*, align 8\l  %flag.addr = alloca i32, align 4\l  store i64 %val, i64* %val.addr, align 8\l  store i8* %vname, i8** %vname.addr, align 8\l  store i32 %flag, i32* %flag.addr, align 4\l  %0 = load i64* %val.addr, align 8\l  %1 = bitcast i64* %val.addr.i to i8*\l  call void @llvm.lifetime.start(i64 8, i8* %1) #3\l  store i64 %0, i64* %val.addr.i, align 8\l  %2 = load i64* %val.addr.i, align 8\l  %and.i = and i64 %2, 255\l  %conv.i = trunc i64 %and.i to i8\l  call void @llvm.lifetime.start(i64 1, i8* %b.addr.i.i) #3\l  store i8 %conv.i, i8* %b.addr.i.i, align 1\l  %3 = load i32* @crc32_context, align 4\l  %shr.i.i = lshr i32 %3, 8\l  %and.i.i = and i32 %shr.i.i, 16777215\l  %4 = load i32* @crc32_context, align 4\l  %5 = load i8* %b.addr.i.i, align 1\l  %conv.i.i = zext i8 %5 to i32\l  %xor.i.i = xor i32 %conv.i.i, %4\l  %and1.i.i = and i32 %xor.i.i, 255\l  %idxprom.i.i = zext i32 %and1.i.i to i64\l  %arrayidx.i.i = getelementptr inbounds [256 x i32]* @crc32_tab, i32 0, i64 %idxprom.i.i\l  %6 = load i32* %arrayidx.i.i, align 4\l  %xor2.i.i = xor i32 %6, %and.i.i\l  store i32 %xor2.i.i, i32* @crc32_context, align 4\l  call void @llvm.lifetime.end(i64 1, i8* %b.addr.i.i) #3\l  %7 = load i64* %val.addr.i, align 8\l  %shr1.i = lshr i64 %7, 8\l  %and2.i = and i64 %shr1.i, 255\l  %conv3.i = trunc i64 %and2.i to i8\l  call void @llvm.lifetime.start(i64 1, i8* %b.addr.i55.i) #3\l  store i8 %conv3.i, i8* %b.addr.i55.i, align 1\l  %8 = load i32* @crc32_context, align 4\l  %shr.i56.i = lshr i32 %8, 8\l  %and.i57.i = and i32 %shr.i56.i, 16777215\l  %9 = load i32* @crc32_context, align 4\l  %10 = load i8* %b.addr.i55.i, align 1\l  %conv.i58.i = zext i8 %10 to i32\l  %xor.i59.i = xor i32 %conv.i58.i, %9\l  %and1.i60.i = and i32 %xor.i59.i, 255\l  %idxprom.i61.i = zext i32 %and1.i60.i to i64\l  %arrayidx.i62.i = getelementptr inbounds [256 x i32]* @crc32_tab, i32 0, i64 %idxprom.i61.i\l  %11 = load i32* %arrayidx.i62.i, align 4\l  %xor2.i63.i = xor i32 %11, %and.i57.i\l  store i32 %xor2.i63.i, i32* @crc32_context, align 4\l  call void @llvm.lifetime.end(i64 1, i8* %b.addr.i55.i) #3\l  %12 = load i64* %val.addr.i, align 8\l  %shr4.i = lshr i64 %12, 16\l  %and5.i = and i64 %shr4.i, 255\l  %conv6.i = trunc i64 %and5.i to i8\l  call void @llvm.lifetime.start(i64 1, i8* %b.addr.i46.i) #3\l  store i8 %conv6.i, i8* %b.addr.i46.i, align 1\l  %13 = load i32* @crc32_context, align 4\l  %shr.i47.i = lshr i32 %13, 8\l  %and.i48.i = and i32 %shr.i47.i, 16777215\l  %14 = load i32* @crc32_context, align 4\l  %15 = load i8* %b.addr.i46.i, align 1\l  %conv.i49.i = zext i8 %15 to i32\l  %xor.i50.i = xor i32 %conv.i49.i, %14\l  %and1.i51.i = and i32 %xor.i50.i, 255\l  %idxprom.i52.i = zext i32 %and1.i51.i to i64\l  %arrayidx.i53.i = getelementptr inbounds [256 x i32]* @crc32_tab, i32 0, i64 %idxprom.i52.i\l  %16 = load i32* %arrayidx.i53.i, align 4\l  %xor2.i54.i = xor i32 %16, %and.i48.i\l  store i32 %xor2.i54.i, i32* @crc32_context, align 4\l  call void @llvm.lifetime.end(i64 1, i8* %b.addr.i46.i) #3\l  %17 = load i64* %val.addr.i, align 8\l  %shr7.i = lshr i64 %17, 24\l  %and8.i = and i64 %shr7.i, 255\l  %conv9.i = trunc i64 %and8.i to i8\l  call void @llvm.lifetime.start(i64 1, i8* %b.addr.i37.i) #3\l  store i8 %conv9.i, i8* %b.addr.i37.i, align 1\l  %18 = load i32* @crc32_context, align 4\l  %shr.i38.i = lshr i32 %18, 8\l  %and.i39.i = and i32 %shr.i38.i, 16777215\l  %19 = load i32* @crc32_context, align 4\l  %20 = load i8* %b.addr.i37.i, align 1\l  %conv.i40.i = zext i8 %20 to i32\l  %xor.i41.i = xor i32 %conv.i40.i, %19\l  %and1.i42.i = and i32 %xor.i41.i, 255\l  %idxprom.i43.i = zext i32 %and1.i42.i to i64\l  %arrayidx.i44.i = getelementptr inbounds [256 x i32]* @crc32_tab, i32 0, i64 %idxprom.i43.i\l  %21 = load i32* %arrayidx.i44.i, align 4\l  %xor2.i45.i = xor i32 %21, %and.i39.i\l  store i32 %xor2.i45.i, i32* @crc32_context, align 4\l  call void @llvm.lifetime.end(i64 1, i8* %b.addr.i37.i) #3\l  %22 = load i64* %val.addr.i, align 8\l  %shr10.i = lshr i64 %22, 32\l  %and11.i = and i64 %shr10.i, 255\l  %conv12.i = trunc i64 %and11.i to i8\l  call void @llvm.lifetime.start(i64 1, i8* %b.addr.i28.i) #3\l  store i8 %conv12.i, i8* %b.addr.i28.i, align 1\l  %23 = load i32* @crc32_context, align 4\l  %shr.i29.i = lshr i32 %23, 8\l  %and.i30.i = and i32 %shr.i29.i, 16777215\l  %24 = load i32* @crc32_context, align 4\l  %25 = load i8* %b.addr.i28.i, align 1\l  %conv.i31.i = zext i8 %25 to i32\l  %xor.i32.i = xor i32 %conv.i31.i, %24\l  %and1.i33.i = and i32 %xor.i32.i, 255\l  %idxprom.i34.i = zext i32 %and1.i33.i to i64\l  %arrayidx.i35.i = getelementptr inbounds [256 x i32]* @crc32_tab, i32 0, i64 %idxprom.i34.i\l  %26 = load i32* %arrayidx.i35.i, align 4\l  %xor2.i36.i = xor i32 %26, %and.i30.i\l  store i32 %xor2.i36.i, i32* @crc32_context, align 4\l  call void @llvm.lifetime.end(i64 1, i8* %b.addr.i28.i) #3\l  %27 = load i64* %val.addr.i, align 8\l  %shr13.i = lshr i64 %27, 40\l  %and14.i = and i64 %shr13.i, 255\l  %conv15.i = trunc i64 %and14.i to i8\l  call void @llvm.lifetime.start(i64 1, i8* %b.addr.i19.i) #3\l  store i8 %conv15.i, i8* %b.addr.i19.i, align 1\l  %28 = load i32* @crc32_context, align 4\l  %shr.i20.i = lshr i32 %28, 8\l  %and.i21.i = and i32 %shr.i20.i, 16777215\l  %29 = load i32* @crc32_context, align 4\l  %30 = load i8* %b.addr.i19.i, align 1\l  %conv.i22.i = zext i8 %30 to i32\l  %xor.i23.i = xor i32 %conv.i22.i, %29\l  %and1.i24.i = and i32 %xor.i23.i, 255\l  %idxprom.i25.i = zext i32 %and1.i24.i to i64\l  %arrayidx.i26.i = getelementptr inbounds [256 x i32]* @crc32_tab, i32 0, i64 %idxprom.i25.i\l  %31 = load i32* %arrayidx.i26.i, align 4\l  %xor2.i27.i = xor i32 %31, %and.i21.i\l  store i32 %xor2.i27.i, i32* @crc32_context, align 4\l  call void @llvm.lifetime.end(i64 1, i8* %b.addr.i19.i) #3\l  %32 = load i64* %val.addr.i, align 8\l  %shr16.i = lshr i64 %32, 48\l  %and17.i = and i64 %shr16.i, 255\l  %conv18.i = trunc i64 %and17.i to i8\l  call void @llvm.lifetime.start(i64 1, i8* %b.addr.i10.i) #3\l  store i8 %conv18.i, i8* %b.addr.i10.i, align 1\l  %33 = load i32* @crc32_context, align 4\l  %shr.i11.i = lshr i32 %33, 8\l  %and.i12.i = and i32 %shr.i11.i, 16777215\l  %34 = load i32* @crc32_context, align 4\l  %35 = load i8* %b.addr.i10.i, align 1\l  %conv.i13.i = zext i8 %35 to i32\l  %xor.i14.i = xor i32 %conv.i13.i, %34\l  %and1.i15.i = and i32 %xor.i14.i, 255\l  %idxprom.i16.i = zext i32 %and1.i15.i to i64\l  %arrayidx.i17.i = getelementptr inbounds [256 x i32]* @crc32_tab, i32 0, i64 %idxprom.i16.i\l  %36 = load i32* %arrayidx.i17.i, align 4\l  %xor2.i18.i = xor i32 %36, %and.i12.i\l  store i32 %xor2.i18.i, i32* @crc32_context, align 4\l  call void @llvm.lifetime.end(i64 1, i8* %b.addr.i10.i) #3\l  %37 = load i64* %val.addr.i, align 8\l  %shr19.i = lshr i64 %37, 56\l  %and20.i = and i64 %shr19.i, 255\l  %conv21.i = trunc i64 %and20.i to i8\l  call void @llvm.lifetime.start(i64 1, i8* %b.addr.i1.i) #3\l  store i8 %conv21.i, i8* %b.addr.i1.i, align 1\l  %38 = load i32* @crc32_context, align 4\l  %shr.i2.i = lshr i32 %38, 8\l  %and.i3.i = and i32 %shr.i2.i, 16777215\l  %39 = load i32* @crc32_context, align 4\l  %40 = load i8* %b.addr.i1.i, align 1\l  %conv.i4.i = zext i8 %40 to i32\l  %xor.i5.i = xor i32 %conv.i4.i, %39\l  %and1.i6.i = and i32 %xor.i5.i, 255\l  %idxprom.i7.i = zext i32 %and1.i6.i to i64\l  %arrayidx.i8.i = getelementptr inbounds [256 x i32]* @crc32_tab, i32 0, i64 %idxprom.i7.i\l  %41 = load i32* %arrayidx.i8.i, align 4\l  %xor2.i9.i = xor i32 %41, %and.i3.i\l  store i32 %xor2.i9.i, i32* @crc32_context, align 4\l  call void @llvm.lifetime.end(i64 1, i8* %b.addr.i1.i) #3\l  %42 = bitcast i64* %val.addr.i to i8*\l  call void @llvm.lifetime.end(i64 8, i8* %42) #3\l  %43 = load i32* %flag.addr, align 4\l  %tobool = icmp ne i32 %43, 0\l  br i1 %tobool, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x2db12d0:s0 -> Node0x2db1330;
	Node0x2db12d0:s1 -> Node0x2db1390;
	Node0x2db1330 [shape=record,label="{if.then:                                          \l  %44 = load i8** %vname.addr, align 8\l  %45 = load i32* @crc32_context, align 4\l  %conv = zext i32 %45 to i64\l  %xor = xor i64 %conv, 4294967295\l  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str126, i32 0, i32 0), i8* %44, i64 %xor)\l  br label %if.end\l}"];
	Node0x2db1330 -> Node0x2db1390;
	Node0x2db1390 [shape=record,label="{if.end:                                           \l  ret void\l}"];
}
